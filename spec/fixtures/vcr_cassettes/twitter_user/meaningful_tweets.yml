---
http_interactions:
- request:
    method: get
    uri: https://api.twitter.com/1.1/statuses/user_timeline.json?count=50&include_rts=1&screen_name=maxnovakovic&trim_user=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      User-Agent:
      - TwitterRubyGem/5.13.0
      Authorization:
      - Bearer AAAAAAAAAAAAAAAAAAAAAH9jdwAAAAAAR%2BgsANMrf09dBb2gDlpkqKpHzEY%3DeZaqzX7ieY8UuFH4zunfKodXnSJFahUWKLDnR8EW2h2qx3TKHf
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate, pre-check=0, post-check=0
      Content-Length:
      - '7889'
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Sat, 24 Jan 2015 17:06:35 UTC
      Expires:
      - Tue, 31 Mar 1981 05:00:00 GMT
      Last-Modified:
      - Sat, 24 Jan 2015 17:06:35 GMT
      Pragma:
      - no-cache
      Server:
      - tsa_b
      Set-Cookie:
      - guest_id=v1%3A142211919506659663; Domain=.twitter.com; Path=/; Expires=Mon,
        23-Jan-2017 17:06:35 UTC
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=631138519
      X-Access-Level:
      - read
      X-Connection-Hash:
      - a9ece4fc709e7c607a66cd77f062ef65
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Rate-Limit-Limit:
      - '300'
      X-Rate-Limit-Remaining:
      - '298'
      X-Rate-Limit-Reset:
      - '1422120064'
      X-Response-Time:
      - '46'
      X-Transaction:
      - e3f9df2d519db353
      X-Twitter-Response-Tags:
      - BouncerCompliant
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: UTF-8
      string: '[{"created_at":"Fri Jan 23 23:34:17 +0000 2015","id":558769720090841090,"id_str":"558769720090841090","text":"Are
        we becoming too reliant on computers? http:\/\/t.co\/qpzubgZHDn","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/qpzubgZHDn","expanded_url":"http:\/\/www.theguardian.com\/books\/2015\/jan\/17\/nicholas-carr-are-we-becoming-too-reliant-on-computers","display_url":"theguardian.com\/books\/2015\/jan\u2026","indices":[42,64]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Thu
        Jan 22 09:26:34 +0000 2015","id":558193998570217473,"id_str":"558193998570217473","text":"Real
        life ad blocker http:\/\/t.co\/2aGQcyHEqt","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":1,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/2aGQcyHEqt","expanded_url":"http:\/\/jonathandub.in\/cognizance\/","display_url":"jonathandub.in\/cognizance\/","indices":[21,43]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Sat
        Jan 17 19:27:04 +0000 2015","id":556533179734294528,"id_str":"556533179734294528","text":"These
        3D printed spinning sculptures are fantastic, hypnotic http:\/\/t.co\/th9TD4AL3K","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":1,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/th9TD4AL3K","expanded_url":"http:\/\/vimeo.com\/116582567","display_url":"vimeo.com\/116582567","indices":[61,83]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Thu
        Jan 15 13:01:15 +0000 2015","id":555711308809900032,"id_str":"555711308809900032","text":"The
        DHS Agent Who Infiltrated Silk Road to Take Down Its Kingpin http:\/\/t.co\/xJgA7VoJvT","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/xJgA7VoJvT","expanded_url":"http:\/\/www.forbes.com\/sites\/sarahjeong\/2015\/01\/14\/the-dhs-agent-who-infiltrated-silk-road-to-take-down-its-kingpin\/","display_url":"forbes.com\/sites\/sarahjeo\u2026","indices":[65,87]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Wed
        Jan 14 20:12:36 +0000 2015","id":555457476410478592,"id_str":"555457476410478592","text":"This
        is hilarious. ''Cookies'' by Douglas Adams http:\/\/t.co\/fvrlYqbw7h","source":"\u003ca
        href=\"http:\/\/twitter.com\/download\/android\" rel=\"nofollow\"\u003eTwitter
        for Android\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":1,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/fvrlYqbw7h","expanded_url":"http:\/\/thejumbuckisalmostextinct.com\/2009\/12\/cookies-by-douglas-adams\/","display_url":"thejumbuckisalmostextinct.com\/2009\/12\/cookie\u2026","indices":[46,68]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Tue
        Jan 13 16:20:24 +0000 2015","id":555036653182795776,"id_str":"555036653182795776","text":"A
        scientific approach to the best chicken stock by @seriouseats http:\/\/t.co\/89ShFlq7MG","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"seriouseats","name":"Serious
        Eats","id":2869531,"id_str":"2869531","indices":[51,63]}],"urls":[{"url":"http:\/\/t.co\/89ShFlq7MG","expanded_url":"http:\/\/www.seriouseats.com\/2014\/10\/how-to-make-rich-flavorful-easy-chicken-stock.html","display_url":"seriouseats.com\/2014\/10\/how-to\u2026","indices":[64,86]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Fri
        Jan 02 14:17:27 +0000 2015","id":551019442600443905,"id_str":"551019442600443905","text":"@cristinabacalso
        Hey there! It\u2019s called Castel Montecroce Trattoria https:\/\/t.co\/YDZT8EfX80","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":551016892178391040,"in_reply_to_status_id_str":"551016892178391040","in_reply_to_user_id":45979314,"in_reply_to_user_id_str":"45979314","in_reply_to_screen_name":"cristinabacalso","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"cristinabacalso","name":"Cristina
        Bacalso","id":45979314,"id_str":"45979314","indices":[0,16]}],"urls":[{"url":"https:\/\/t.co\/YDZT8EfX80","expanded_url":"https:\/\/plus.google.com\/110199856631914548293\/about","display_url":"plus.google.com\/11019985663191\u2026","indices":[68,91]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Sat
        Dec 27 11:04:19 +0000 2014","id":548796512768380928,"id_str":"548796512768380928","text":"@amybowtell
        Thank you! I''m not sure really, I bet you could do some live processing with
        a webcam or something. That might be cool?","source":"\u003ca href=\"http:\/\/twitter.com\/download\/android\"
        rel=\"nofollow\"\u003eTwitter for Android\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":548782876490469376,"in_reply_to_status_id_str":"548782876490469376","in_reply_to_user_id":31996044,"in_reply_to_user_id_str":"31996044","in_reply_to_screen_name":"amybowtell","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"amybowtell","name":"Amy
        Bowtell","id":31996044,"id_str":"31996044","indices":[0,11]}],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Mon
        Dec 22 17:05:38 +0000 2014","id":547075500020359168,"id_str":"547075500020359168","text":"High
        speed M&amp;M sorting machine http:\/\/t.co\/HzyNxV9b3H","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/HzyNxV9b3H","expanded_url":"http:\/\/www.reviewmylife.co.uk\/blog\/2014\/12\/22\/high-speed-mandm-sorting-machine\/","display_url":"reviewmylife.co.uk\/blog\/2014\/12\/2\u2026","indices":[35,57]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Mon
        Dec 15 16:31:04 +0000 2014","id":544530089690816512,"id_str":"544530089690816512","text":"RT
        @TheNextWeb: Seedcamp invests in 7 new startups including app-controlled cameras
        and machine intelligence http:\/\/t.co\/BH3l2l2qdG http:\/\/\u2026","source":"\u003ca
        href=\"http:\/\/twitter.com\" rel=\"nofollow\"\u003eTwitter Web Client\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweeted_status":{"created_at":"Mon
        Dec 15 12:02:58 +0000 2014","id":544462616505372672,"id_str":"544462616505372672","text":"Seedcamp
        invests in 7 new startups including app-controlled cameras and machine intelligence
        http:\/\/t.co\/BH3l2l2qdG http:\/\/t.co\/lLTGEI5JC6","source":"\u003ca href=\"http:\/\/coschedule.com\"
        rel=\"nofollow\"\u003eCoSchedule\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":10876852,"id_str":"10876852"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":34,"favorite_count":19,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/BH3l2l2qdG","expanded_url":"http:\/\/tnw.co\/1GHaiHP","display_url":"tnw.co\/1GHaiHP","indices":[93,115]}],"media":[{"id":544462616463417344,"id_str":"544462616463417344","indices":[116,138],"media_url":"http:\/\/pbs.twimg.com\/media\/B45R3W_IIAAau5n.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/B45R3W_IIAAau5n.jpg","url":"http:\/\/t.co\/lLTGEI5JC6","display_url":"pic.twitter.com\/lLTGEI5JC6","expanded_url":"http:\/\/twitter.com\/TheNextWeb\/status\/544462616505372672\/photo\/1","type":"photo","sizes":{"thumb":{"w":150,"h":150,"resize":"crop"},"large":{"w":660,"h":276,"resize":"fit"},"medium":{"w":600,"h":250,"resize":"fit"},"small":{"w":340,"h":142,"resize":"fit"}}}]},"extended_entities":{"media":[{"id":544462616463417344,"id_str":"544462616463417344","indices":[116,138],"media_url":"http:\/\/pbs.twimg.com\/media\/B45R3W_IIAAau5n.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/B45R3W_IIAAau5n.jpg","url":"http:\/\/t.co\/lLTGEI5JC6","display_url":"pic.twitter.com\/lLTGEI5JC6","expanded_url":"http:\/\/twitter.com\/TheNextWeb\/status\/544462616505372672\/photo\/1","type":"photo","sizes":{"thumb":{"w":150,"h":150,"resize":"crop"},"large":{"w":660,"h":276,"resize":"fit"},"medium":{"w":600,"h":250,"resize":"fit"},"small":{"w":340,"h":142,"resize":"fit"}}}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},"retweet_count":34,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"TheNextWeb","name":"The
        Next Web","id":10876852,"id_str":"10876852","indices":[3,14]}],"urls":[{"url":"http:\/\/t.co\/BH3l2l2qdG","expanded_url":"http:\/\/tnw.co\/1GHaiHP","display_url":"tnw.co\/1GHaiHP","indices":[109,131]}],"media":[{"id":544462616463417344,"id_str":"544462616463417344","indices":[139,140],"media_url":"http:\/\/pbs.twimg.com\/media\/B45R3W_IIAAau5n.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/B45R3W_IIAAau5n.jpg","url":"http:\/\/t.co\/lLTGEI5JC6","display_url":"pic.twitter.com\/lLTGEI5JC6","expanded_url":"http:\/\/twitter.com\/TheNextWeb\/status\/544462616505372672\/photo\/1","type":"photo","sizes":{"thumb":{"w":150,"h":150,"resize":"crop"},"large":{"w":660,"h":276,"resize":"fit"},"medium":{"w":600,"h":250,"resize":"fit"},"small":{"w":340,"h":142,"resize":"fit"}},"source_status_id":544462616505372672,"source_status_id_str":"544462616505372672","source_user_id":10876852,"source_user_id_str":"10876852"}]},"extended_entities":{"media":[{"id":544462616463417344,"id_str":"544462616463417344","indices":[139,140],"media_url":"http:\/\/pbs.twimg.com\/media\/B45R3W_IIAAau5n.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/B45R3W_IIAAau5n.jpg","url":"http:\/\/t.co\/lLTGEI5JC6","display_url":"pic.twitter.com\/lLTGEI5JC6","expanded_url":"http:\/\/twitter.com\/TheNextWeb\/status\/544462616505372672\/photo\/1","type":"photo","sizes":{"thumb":{"w":150,"h":150,"resize":"crop"},"large":{"w":660,"h":276,"resize":"fit"},"medium":{"w":600,"h":250,"resize":"fit"},"small":{"w":340,"h":142,"resize":"fit"}},"source_status_id":544462616505372672,"source_status_id_str":"544462616505372672","source_user_id":10876852,"source_user_id_str":"10876852"}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Thu
        Dec 11 20:45:23 +0000 2014","id":543144538257494016,"id_str":"543144538257494016","text":"@jmartink
        \"@IrishCentral: #weatherbomb storm raises orange weather alert in Ireland
        this week http:\/\/t.co\/0GvGJ0E8Jn http:\/\/t.co\/W1eLfhD9Pe\"","source":"\u003ca
        href=\"http:\/\/twitter.com\/download\/android\" rel=\"nofollow\"\u003eTwitter
        for Android\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":14578385,"in_reply_to_user_id_str":"14578385","in_reply_to_screen_name":"jmartink","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[{"text":"weatherbomb","indices":[26,38]}],"symbols":[],"user_mentions":[{"screen_name":"jmartink","name":"Martin
        Karlsson","id":14578385,"id_str":"14578385","indices":[0,9]},{"screen_name":"IrishCentral","name":"IrishCentral","id":17899893,"id_str":"17899893","indices":[11,24]}],"urls":[{"url":"http:\/\/t.co\/0GvGJ0E8Jn","expanded_url":"http:\/\/irsh.us\/1whlgRM","display_url":"irsh.us\/1whlgRM","indices":[94,116]}],"media":[{"id":542750540619591680,"id_str":"542750540619591680","indices":[117,139],"media_url":"http:\/\/pbs.twimg.com\/media\/B4g8vbdIMAAeykM.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/B4g8vbdIMAAeykM.jpg","url":"http:\/\/t.co\/W1eLfhD9Pe","display_url":"pic.twitter.com\/W1eLfhD9Pe","expanded_url":"http:\/\/twitter.com\/IrishCentral\/status\/542974600343089152\/photo\/1","type":"photo","sizes":{"large":{"w":650,"h":488,"resize":"fit"},"small":{"w":340,"h":255,"resize":"fit"},"medium":{"w":600,"h":450,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"}},"source_status_id":542974600343089152,"source_status_id_str":"542974600343089152","source_user_id":17899893,"source_user_id_str":"17899893"}]},"extended_entities":{"media":[{"id":542750540619591680,"id_str":"542750540619591680","indices":[117,139],"media_url":"http:\/\/pbs.twimg.com\/media\/B4g8vbdIMAAeykM.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/B4g8vbdIMAAeykM.jpg","url":"http:\/\/t.co\/W1eLfhD9Pe","display_url":"pic.twitter.com\/W1eLfhD9Pe","expanded_url":"http:\/\/twitter.com\/IrishCentral\/status\/542974600343089152\/photo\/1","type":"photo","sizes":{"large":{"w":650,"h":488,"resize":"fit"},"small":{"w":340,"h":255,"resize":"fit"},"medium":{"w":600,"h":450,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"}},"source_status_id":542974600343089152,"source_status_id_str":"542974600343089152","source_user_id":17899893,"source_user_id_str":"17899893"}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Thu
        Dec 11 10:47:21 +0000 2014","id":542994038866313216,"id_str":"542994038866313216","text":"This
        song https:\/\/t.co\/LtfsnPDhur \ud83d\udc4f","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/LtfsnPDhur","expanded_url":"https:\/\/soundcloud.com\/mermaidsmha\/night-walkin","display_url":"soundcloud.com\/mermaidsmha\/ni\u2026","indices":[10,33]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Wed
        Dec 10 22:36:41 +0000 2014","id":542810157626183680,"id_str":"542810157626183680","text":"This
        guy rocks: https:\/\/t.co\/Ih0IAwOVv5 Submarine Sandwich by PES","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/Ih0IAwOVv5","expanded_url":"https:\/\/www.youtube.com\/watch?v=EWEl8-PHhMI","display_url":"youtube.com\/watch?v=EWEl8-\u2026","indices":[16,39]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Sat
        Dec 06 16:39:25 +0000 2014","id":541270698384449536,"id_str":"541270698384449536","text":"@GhastlyChimera
        Frazzles","source":"\u003ca href=\"http:\/\/twitter.com\/download\/android\"
        rel=\"nofollow\"\u003eTwitter for Android\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":541264639926218752,"in_reply_to_status_id_str":"541264639926218752","in_reply_to_user_id":401521843,"in_reply_to_user_id_str":"401521843","in_reply_to_screen_name":"GhastlyChimera","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"GhastlyChimera","name":"Alex
        Novakovic","id":401521843,"id_str":"401521843","indices":[0,15]}],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Wed
        Nov 26 15:59:58 +0000 2014","id":537636893656350720,"id_str":"537636893656350720","text":"@BoweFrankema
        @uselateral @TNWConference YAY","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":537635907546144768,"in_reply_to_status_id_str":"537635907546144768","in_reply_to_user_id":91139811,"in_reply_to_user_id_str":"91139811","in_reply_to_screen_name":"BoweFrankema","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"BoweFrankema","name":"Bowe
        Frankema","id":91139811,"id_str":"91139811","indices":[0,13]},{"screen_name":"uselateral","name":"Lateral","id":2858850268,"id_str":"2858850268","indices":[14,25]},{"screen_name":"TNWconference","name":"#TNWEurope","id":99982789,"id_str":"99982789","indices":[26,40]}],"urls":[]},"favorited":false,"retweeted":false,"lang":"und"},{"created_at":"Wed
        Nov 26 15:54:23 +0000 2014","id":537635487926984704,"id_str":"537635487926984704","text":"Vote
        for Lateral so we get a chance to present on stage: http:\/\/t.co\/gqah4kS0db
        #TNWUSA @uselateral","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[{"text":"TNWUSA","indices":[80,87]}],"symbols":[],"user_mentions":[{"screen_name":"uselateral","name":"Lateral","id":2858850268,"id_str":"2858850268","indices":[88,99]}],"urls":[{"url":"http:\/\/t.co\/gqah4kS0db","expanded_url":"http:\/\/thenextweb.com\/boost\/","display_url":"thenextweb.com\/boost\/","indices":[57,79]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Wed
        Nov 26 15:11:22 +0000 2014","id":537624663095250944,"id_str":"537624663095250944","text":"Really
        enjoying the @jackmaster Mastermix 2014. My second listen in 24hrs! https:\/\/t.co\/NZPsxvdxN1","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"jackmaster","name":"JACKMASTER","id":18700216,"id_str":"18700216","indices":[20,31]}],"urls":[{"url":"https:\/\/t.co\/NZPsxvdxN1","expanded_url":"https:\/\/soundcloud.com\/jackmaster\/jackmaster-mastermix-2014","display_url":"soundcloud.com\/jackmaster\/jac\u2026","indices":[75,98]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Mon
        Nov 24 15:02:08 +0000 2014","id":536897560833970177,"id_str":"536897560833970177","text":"How
        we name colours in Chinese and English http:\/\/t.co\/J6LpxWE5gW","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":1,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/J6LpxWE5gW","expanded_url":"http:\/\/muyueh.com\/greenhoney\/","display_url":"muyueh.com\/greenhoney\/","indices":[43,65]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Thu
        Nov 20 13:31:50 +0000 2014","id":535425284884168704,"id_str":"535425284884168704","text":"I
        enjoyed this: http:\/\/t.co\/XjOmkwbL9p","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/XjOmkwbL9p","expanded_url":"http:\/\/www.theawl.com\/2014\/11\/how-to-draw-people-on-the-subway","display_url":"theawl.com\/2014\/11\/how-to\u2026","indices":[16,38]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Tue
        Nov 18 19:49:40 +0000 2014","id":534795593672306688,"id_str":"534795593672306688","text":"@isjackwild
        Yeah but also could be #fragments or ?params=hello .. I guess it\u2019s not
        possible without looking at the page contents?","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":534794659894398978,"in_reply_to_status_id_str":"534794659894398978","in_reply_to_user_id":258755947,"in_reply_to_user_id_str":"258755947","in_reply_to_screen_name":"isjackwild","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[{"text":"fragments","indices":[35,45]}],"symbols":[],"user_mentions":[{"screen_name":"isjackwild","name":"Jack
        Wild","id":258755947,"id_str":"258755947","indices":[0,11]}],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Tue
        Nov 18 19:32:16 +0000 2014","id":534791216035266561,"id_str":"534791216035266561","text":"If
        I have a list of URLs, how can I check if a given URL is already in the list?
        What if it has www. and one in the list doesn\u2019t? Hmm :\/","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Thu
        Nov 13 14:32:17 +0000 2014","id":532903783798685696,"id_str":"532903783798685696","text":"I
        can''t help but think Philae cheese steak whenever I see it written","source":"\u003ca
        href=\"http:\/\/twitter.com\/download\/android\" rel=\"nofollow\"\u003eTwitter
        for Android\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":1,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Thu
        Nov 13 09:38:08 +0000 2014","id":532829758422515712,"id_str":"532829758422515712","text":"@LiveAndLetDraw
        Hah thanks, maybe I\u2019ll give it a go if I\u2019m in a tough position ;)","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":532612769107828736,"in_reply_to_status_id_str":"532612769107828736","in_reply_to_user_id":119682861,"in_reply_to_user_id_str":"119682861","in_reply_to_screen_name":"LiveAndLetDraw","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"LiveAndLetDraw","name":"Jason
        Turner","id":119682861,"id_str":"119682861","indices":[0,15]}],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Tue
        Nov 11 09:41:29 +0000 2014","id":532105824731418624,"id_str":"532105824731418624","text":"This
        is excellent, slightly audacious https:\/\/t.co\/u58AomW8gk \"The Random Darknet
        Shopper is an automated online shopping bot\"","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":2,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/u58AomW8gk","expanded_url":"https:\/\/wwwwwwwwwwwwwwwwwwwwww.bitnik.org\/r\/","display_url":"wwwwwwwwwwwwwwwwwwwwww.bitnik.org\/r\/","indices":[38,61]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Mon
        Nov 10 19:13:27 +0000 2014","id":531887377296670720,"id_str":"531887377296670720","text":"26.90\u20ac\/kg
        for organic chicken breast? How much for a live chicken??","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Mon
        Nov 10 08:31:33 +0000 2014","id":531725838325403649,"id_str":"531725838325403649","text":"What''s
        up with this new \"Top Trends\" in Twitter for Android? It''s terrible! I
        miss the \"Discover\" and \"Activity\" tabs already.","source":"\u003ca href=\"http:\/\/twitter.com\/download\/android\"
        rel=\"nofollow\"\u003eTwitter for Android\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Sat
        Nov 08 10:33:48 +0000 2014","id":531031827319119872,"id_str":"531031827319119872","text":"Ah
        awesome, I\u2019ve been on your website for around 30 seconds.. Perfect time
        to interrupt my reading by asking me to join your mailing list.","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Sun
        Nov 02 11:35:09 +0000 2014","id":528872939287232512,"id_str":"528872939287232512","text":"Tumblr
        is the Myspace of 2014","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Wed
        Oct 29 12:02:31 +0000 2014","id":527430274117013505,"id_str":"527430274117013505","text":"The
        Temptations - Papa was a Rolling Stone https:\/\/t.co\/zO0SW4HYkg","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/zO0SW4HYkg","expanded_url":"https:\/\/www.youtube.com\/watch?v=Hcqs5z0yEl4","display_url":"youtube.com\/watch?v=Hcqs5z\u2026","indices":[43,66]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Tue
        Oct 28 15:15:35 +0000 2014","id":527116475166097408,"id_str":"527116475166097408","text":"No
        SoundCloud, for the 100th time I don\u2019t want to save any tracks to my
        likes!","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Sun
        Oct 26 13:34:10 +0000 2014","id":526366177980067840,"id_str":"526366177980067840","text":"This
        is nice: Hiroshi Yoshimura \u2013 Mori No Yoake - Forest Side 2 https:\/\/t.co\/98Q4iyagDZ","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/98Q4iyagDZ","expanded_url":"https:\/\/www.youtube.com\/watch?v=dpKL1hvTsUM","display_url":"youtube.com\/watch?v=dpKL1h\u2026","indices":[64,87]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Fri
        Oct 24 14:03:21 +0000 2014","id":525648743069396992,"id_str":"525648743069396992","text":"Maps
        Of Street Layouts Colored By Orientation http:\/\/t.co\/yFBysoN2MW","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/yFBysoN2MW","expanded_url":"http:\/\/www.datapointed.net\/2014\/10\/maps-of-street-grids-by-orientation\/","display_url":"datapointed.net\/2014\/10\/maps-o\u2026","indices":[46,68]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Tue
        Oct 21 11:17:56 +0000 2014","id":524519950883364865,"id_str":"524519950883364865","text":"@isjackwild
        With Handlebars the idea is to try keep any JS out of the template.. You could
        do groupBy in EJS though.","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":524518001862008832,"in_reply_to_status_id_str":"524518001862008832","in_reply_to_user_id":258755947,"in_reply_to_user_id_str":"258755947","in_reply_to_screen_name":"isjackwild","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"isjackwild","name":"Jack
        Wild","id":258755947,"id_str":"258755947","indices":[0,11]}],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Tue
        Oct 21 10:40:51 +0000 2014","id":524510621933379584,"id_str":"524510621933379584","text":"@isjackwild
        Could you use groupBy? http:\/\/t.co\/piLMbu0NaG _.groupBy(object, \u2018category\u2019);","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":524504260609069056,"in_reply_to_status_id_str":"524504260609069056","in_reply_to_user_id":258755947,"in_reply_to_user_id_str":"258755947","in_reply_to_screen_name":"isjackwild","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"isjackwild","name":"Jack
        Wild","id":258755947,"id_str":"258755947","indices":[0,11]}],"urls":[{"url":"http:\/\/t.co\/piLMbu0NaG","expanded_url":"http:\/\/underscorejs.org\/#groupBy","display_url":"underscorejs.org\/#groupBy","indices":[35,57]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Tue
        Oct 21 10:31:40 +0000 2014","id":524508309270061056,"id_str":"524508309270061056","text":"RT
        @OnMarsFirst: now i am on mars","source":"\u003ca href=\"http:\/\/twitter.com\"
        rel=\"nofollow\"\u003eTwitter Web Client\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweeted_status":{"created_at":"Sun
        Aug 03 02:21:10 +0000 2014","id":495756230799814657,"id_str":"495756230799814657","text":"now
        i am on mars","source":"\u003ca href=\"http:\/\/twitter.com\" rel=\"nofollow\"\u003eTwitter
        Web Client\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":2702332878,"id_str":"2702332878"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":62,"favorite_count":74,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},"retweet_count":62,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"OnMarsFirst","name":"Evghenia
        is on Mars","id":2702332878,"id_str":"2702332878","indices":[3,15]}],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Fri
        Oct 17 09:46:33 +0000 2014","id":523047402841079808,"id_str":"523047402841079808","text":"It
        was the best of times, it was the blurst of times?! http:\/\/t.co\/DCa6XBASOb","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[],"media":[{"id":523047400902909954,"id_str":"523047400902909954","indices":[55,77],"media_url":"http:\/\/pbs.twimg.com\/media\/B0I81wOCYAIoFnm.png","media_url_https":"https:\/\/pbs.twimg.com\/media\/B0I81wOCYAIoFnm.png","url":"http:\/\/t.co\/DCa6XBASOb","display_url":"pic.twitter.com\/DCa6XBASOb","expanded_url":"http:\/\/twitter.com\/maxnovakovic\/status\/523047402841079808\/photo\/1","type":"photo","sizes":{"large":{"w":1024,"h":760,"resize":"fit"},"medium":{"w":600,"h":445,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"small":{"w":340,"h":252,"resize":"fit"}}}]},"extended_entities":{"media":[{"id":523047400902909954,"id_str":"523047400902909954","indices":[55,77],"media_url":"http:\/\/pbs.twimg.com\/media\/B0I81wOCYAIoFnm.png","media_url_https":"https:\/\/pbs.twimg.com\/media\/B0I81wOCYAIoFnm.png","url":"http:\/\/t.co\/DCa6XBASOb","display_url":"pic.twitter.com\/DCa6XBASOb","expanded_url":"http:\/\/twitter.com\/maxnovakovic\/status\/523047402841079808\/photo\/1","type":"photo","sizes":{"large":{"w":1024,"h":760,"resize":"fit"},"medium":{"w":600,"h":445,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"small":{"w":340,"h":252,"resize":"fit"}}}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Wed
        Oct 15 17:57:40 +0000 2014","id":522446221420797952,"id_str":"522446221420797952","text":"Q
        Lazzarus - Goodbye Horses https:\/\/t.co\/MEf6pBH0za","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/MEf6pBH0za","expanded_url":"https:\/\/www.youtube.com\/watch?v=X_DVS_303kQ","display_url":"youtube.com\/watch?v=X_DVS_\u2026","indices":[28,51]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Wed
        Oct 15 10:48:58 +0000 2014","id":522338334858027008,"id_str":"522338334858027008","text":"Love
        this video: BICEP - Lyk Lyk https:\/\/t.co\/zFMF8fstGa","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":1,"favorite_count":1,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/zFMF8fstGa","expanded_url":"https:\/\/www.youtube.com\/watch?v=6dYQNlWQ4UY","display_url":"youtube.com\/watch?v=6dYQNl\u2026","indices":[33,56]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Tue
        Oct 14 13:48:06 +0000 2014","id":522021026696548352,"id_str":"522021026696548352","text":"@GhastlyChimera
        https:\/\/t.co\/G2TworJSKy","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":401521843,"in_reply_to_user_id_str":"401521843","in_reply_to_screen_name":"GhastlyChimera","user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"GhastlyChimera","name":"Alex
        Novakovic","id":401521843,"id_str":"401521843","indices":[0,15]}],"urls":[{"url":"https:\/\/t.co\/G2TworJSKy","expanded_url":"https:\/\/www.youtube.com\/watch?v=4DgbUBoxa48","display_url":"youtube.com\/watch?v=4DgbUB\u2026","indices":[16,39]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"und"},{"created_at":"Tue
        Oct 14 13:30:33 +0000 2014","id":522016609893122050,"id_str":"522016609893122050","text":"Clap!
        Clap! - \u201cKuj Yato\u201d https:\/\/t.co\/iWJSlUBI4f","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/iWJSlUBI4f","expanded_url":"https:\/\/www.youtube.com\/watch?v=v4sDiCKdZ4M","display_url":"youtube.com\/watch?v=v4sDiC\u2026","indices":[25,48]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"ht"},{"created_at":"Mon
        Oct 13 17:23:58 +0000 2014","id":521712963250835457,"id_str":"521712963250835457","text":"Very
        informative - The most widely spoken language in the UK (other than Dutch)
        by county http:\/\/t.co\/pa41ylIFtB","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[],"media":[{"id":521712962344853504,"id_str":"521712962344853504","indices":[90,112],"media_url":"http:\/\/pbs.twimg.com\/media\/Bz1_LNNIIAAyUcf.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/Bz1_LNNIIAAyUcf.jpg","url":"http:\/\/t.co\/pa41ylIFtB","display_url":"pic.twitter.com\/pa41ylIFtB","expanded_url":"http:\/\/twitter.com\/maxnovakovic\/status\/521712963250835457\/photo\/1","type":"photo","sizes":{"small":{"w":340,"h":369,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":652,"resize":"fit"},"large":{"w":942,"h":1024,"resize":"fit"}}}]},"extended_entities":{"media":[{"id":521712962344853504,"id_str":"521712962344853504","indices":[90,112],"media_url":"http:\/\/pbs.twimg.com\/media\/Bz1_LNNIIAAyUcf.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/Bz1_LNNIIAAyUcf.jpg","url":"http:\/\/t.co\/pa41ylIFtB","display_url":"pic.twitter.com\/pa41ylIFtB","expanded_url":"http:\/\/twitter.com\/maxnovakovic\/status\/521712963250835457\/photo\/1","type":"photo","sizes":{"small":{"w":340,"h":369,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":600,"h":652,"resize":"fit"},"large":{"w":942,"h":1024,"resize":"fit"}}}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Mon
        Oct 13 08:47:33 +0000 2014","id":521583004700147712,"id_str":"521583004700147712","text":"What
        the Flag Says - The complex histories woven into a simple piece of cloth https:\/\/t.co\/lWyZ8kdROR","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":1,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/lWyZ8kdROR","expanded_url":"https:\/\/medium.com\/re-form\/what-the-flag-says-6b48ef093e6f","display_url":"medium.com\/re-form\/what-t\u2026","indices":[78,101]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Sat
        Oct 11 11:28:06 +0000 2014","id":520898634129633281,"id_str":"520898634129633281","text":"That\u2019s
        funny. The key used to encrypt Snapchat images is the concatenation of an
        ID and ''seems legit\u2026'' https:\/\/t.co\/Iw9EjxvRP3","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/Iw9EjxvRP3","expanded_url":"https:\/\/github.com\/programa-stic\/snapchat-decrypt","display_url":"github.com\/programa-stic\/\u2026","indices":[103,126]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Fri
        Oct 10 10:43:07 +0000 2014","id":520524923711000576,"id_str":"520524923711000576","text":"Mapping
        the Manhattan Apartment that\u2019s the Farthest from any Subway http:\/\/t.co\/9L7lqPccZX","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":1,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/9L7lqPccZX","expanded_url":"http:\/\/iquantny.tumblr.com\/post\/99544282749\/found-the-manhattan-apartment-thats-the-farthest-from","display_url":"iquantny.tumblr.com\/post\/995442827\u2026","indices":[68,90]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Fri
        Oct 10 09:44:00 +0000 2014","id":520510046023995393,"id_str":"520510046023995393","text":"RT
        @moon_beamed: At a Glance: What Apple Watch Means for Typography @HuffPostBlog
        http:\/\/t.co\/HQOA1Bgced via @HuffPostTech","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweeted_status":{"created_at":"Fri
        Oct 10 08:21:36 +0000 2014","id":520489310873608193,"id_str":"520489310873608193","text":"At
        a Glance: What Apple Watch Means for Typography @HuffPostBlog http:\/\/t.co\/HQOA1Bgced
        via @HuffPostTech","source":"\u003ca href=\"https:\/\/dev.twitter.com\/docs\/tfw\"
        rel=\"nofollow\"\u003eTwitter for Websites\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":588188684,"id_str":"588188684"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":1,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"HuffPostBlog","name":"Huffington
        Post Blog","id":131500972,"id_str":"131500972","indices":[51,64]},{"screen_name":"HuffPostTech","name":"HuffPost
        Tech","id":73147282,"id_str":"73147282","indices":[92,105]}],"urls":[{"url":"http:\/\/t.co\/HQOA1Bgced","expanded_url":"http:\/\/huff.to\/1slf0bb","display_url":"huff.to\/1slf0bb","indices":[65,87]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},"retweet_count":1,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"moon_beamed","name":"Danielle
        Reid","id":588188684,"id_str":"588188684","indices":[3,15]},{"screen_name":"HuffPostBlog","name":"Huffington
        Post Blog","id":131500972,"id_str":"131500972","indices":[68,81]},{"screen_name":"HuffPostTech","name":"HuffPost
        Tech","id":73147282,"id_str":"73147282","indices":[109,122]}],"urls":[{"url":"http:\/\/t.co\/HQOA1Bgced","expanded_url":"http:\/\/huff.to\/1slf0bb","display_url":"huff.to\/1slf0bb","indices":[82,104]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Thu
        Oct 09 12:38:02 +0000 2014","id":520191457596936195,"id_str":"520191457596936195","text":"New
        tube carriages for London http:\/\/t.co\/qffkN4SWSc","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"http:\/\/t.co\/qffkN4SWSc","expanded_url":"http:\/\/www.tfl.gov.uk\/campaign\/new-tube-for-london","display_url":"tfl.gov.uk\/campaign\/new-t\u2026","indices":[30,52]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Thu
        Oct 09 12:22:48 +0000 2014","id":520187623298859008,"id_str":"520187623298859008","text":"Making
        japanese food samples https:\/\/t.co\/mZ4EfXXvUp","source":"\u003ca href=\"https:\/\/about.twitter.com\/products\/tweetdeck\"
        rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/mZ4EfXXvUp","expanded_url":"https:\/\/www.youtube.com\/watch?v=PPQrNkOgttQ","display_url":"youtube.com\/watch?v=PPQrNk\u2026","indices":[29,52]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Tue
        Oct 07 19:47:30 +0000 2014","id":519574760741543936,"id_str":"519574760741543936","text":"Is
        it possible to own too many socks?","source":"\u003ca href=\"http:\/\/twitter.com\/download\/android\"
        rel=\"nofollow\"\u003eTwitter for Android\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"},{"created_at":"Thu
        Oct 02 10:06:07 +0000 2014","id":517616509305520128,"id_str":"517616509305520128","text":"I
        know it\u2019s impractical and stupid but I want this https:\/\/t.co\/kLaGYk8iyw","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":1,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/kLaGYk8iyw","expanded_url":"https:\/\/github.com\/Swordfish90\/cool-retro-term","display_url":"github.com\/Swordfish90\/co\u2026","indices":[51,74]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"},{"created_at":"Mon
        Sep 29 20:21:53 +0000 2014","id":516684307797393408,"id_str":"516684307797393408","text":"The
        Simpsons couch gag by Don Hertzfeldt is great https:\/\/t.co\/vtW3hy2iGN","source":"\u003ca
        href=\"https:\/\/about.twitter.com\/products\/tweetdeck\" rel=\"nofollow\"\u003eTweetDeck\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"in_reply_to_screen_name":null,"user":{"id":14625054,"id_str":"14625054"},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":0,"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[{"url":"https:\/\/t.co\/vtW3hy2iGN","expanded_url":"https:\/\/vid.me\/VFj","display_url":"vid.me\/VFj","indices":[50,73]}]},"favorited":false,"retweeted":false,"possibly_sensitive":false,"lang":"en"}]'
    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:06:35 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://www.theguardian.com/books/2015/jan/17/nicholas-carr-are-we-becoming-too-reliant-on-computers
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:06:35 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:06:35 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '9426'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Point of view
        Nicholas Carr: 'Are we becoming too reliant on computers?'
        The most subtle of our human skills remains well beyond the reach of programmers, but we must be wary of surrendering too much power to machines
        Are we being sucked into an automated existence? … a still from I, Robot. Photograph: Allstar/20th Century Fox
        Share on WhatsApp
        Are humans necessary? The answer to that question would seem to be in doubt. As computers continue their inexorable advance, software is taking over sophisticated jobs in fields as various as accounting and medicine, architecture and law. Soon, our Silicon Valley magicians tell us, robots will be driving our cars and flying our planes, diagnosing our ailments and prescribing treatments, teaching our kids and caring for our ageing parents, and, in general, orchestrating our lives. By the end of the next decade, Google’s Ray Kurzweil predicts, artificial intelligence will outstrip the human variety. We’ll have been made redundant by our machines.
        It’s true that our jobs and lives are becoming ever more automated, and it seems a sure bet that the trend will continue. Computers aren’t about to slow down or dumb down. But we shouldn’t write ourselves out of the plot just yet. As digital technology sprints forward, we’re not just learning about the possibilities of computer intelligence, we’re also getting a lesson in its limits. The most subtle of our human skills – our common sense, our ingenuity and adaptability, the fluidity of our thinking – remain well beyond the reach of programmers. Far from displacing us, computer automation is underscoring just how valuable, and singular, our own talents are.
        Consider the muchcelebrated selfdriving car. When Google announced, in 2010, that it had built a Prius that could drive itself through traffic – an amazing achievement, to be sure – the company also predicted that fully autonomous vehicles would be on sale by the end of the decade. That’s not going to happen. Lost in the hype about robotic cars has been the fact that human drivers continue to play an essential role in their operation. Robots still get flummoxed by all sorts of odd and unexpected events – detours, leafcovered roads, gesturing traffic police, windblown bits of debris – that human drivers interpret and respond to with remarkable aplomb.
        Even if engineers succeed in making a robotic vehicle able to handle 99% of driving situations, robotics experts note, that’s still a very long way from full autonomy. It’s possible to imagine selfdriving cars operating independently in tightly controlled circumstances, such as on dedicated highway lanes, but as long as cars have to handle the vagaries of realworld traffic in cities and neighbourhoods, a watchful, adept human will continue to have a place in the driver’s seat.
        The same is true in aviation. Autopilots handle the bulk of flying these days, but the technology is far from flawless. When automated systems break down or confront situations their software can’t handle, a pilot has to take over. We learned a stark lesson about the limits of flight automation in 2009 when a US Airways jet lost both its engines after hitting a flock of geese on takeoff from LaGuardia airport in New York. Reacting calmly and brilliantly, the pilot, Chesley Sullenberger , landed the plane safely on the Hudson river. Sullenberger’s feat may have been particularly dramatic, but skilled pilots guide planes out of hazardous situations every day.
        expand
        An artistic sketch of Google’s prototype of a selfdriving car. Photograph: EPA
        The shortcomings of robotic drivers and pilots reveal that the skills we humans take for granted – our ability to make sense of an unpredictable world and navigate our way through its complexities – are ones that computers can replicate only imperfectly. When the going gets tough, the software hands the wheel to the human. With software algorithms now taking on knowledge work, we’re coming to find that our most subtle intellectual skills also remain beyond the reach of programmers. The ability of computers and “big data” algorithms to analyse and make judgments about complex phenomena has come a long way in recent years. What it hasn’t done is obviate the need for human insight and intuition.
        In medicine, extravagant promises have been made about how information technology will improve care and cut costs. But recent studies of digital recordkeeping and diagnostic systems reveal that they actually tend to inflate healthcare costs, while making no measurable difference in the quality of patient outcomes. Computers can provide valuable information to doctors, but they can’t match an experienced doctor’s ability to grasp the intricacies of a patient’s condition or guide the patient back to health. As the surgeon and author Atul Gawande has pointed out, we can only go so far in routinising medicine. The “expert audacity” of the experienced clinician can’t be replaced by software templates and predictive algorithms.
        In education, computers are also falling short of expectations. Just a couple of years ago, everyone thought that massive open online courses – Moocs – would revolutionise universities. Classrooms and teachers seemed horribly outdated when compared to the precision and efficiency of computerised lessons. And yet Moocs have largely been a flop. We seem to have underestimated the intangible benefits of bringing students together with a real teacher in a real place. Inspiration and learning don’t flow so well through fibreoptic cables.
        The technophile reader will at this point be pulling her hair out. Sure, she’ll argue, computers have limitations today, but the weaknesses are only temporary. Since the speed of computers continues to advance exponentially, it is just a matter of time before machines will be able to do everything we can do. That’s an understandable response, and a typical one, but it springs from flawed reasoning. What ultimately constrains computers’ ability to repicate human thought has little to do with technical characteristics such as processor speed or memory capacity. It has everything to do with the machines’ lack of being. Even the most accomplished computer systems, University of Toronto computer scientist Hector Levesque writes, remain “idiotsavants”. They can be programmed to perform exceptionally well in carrying out tightly circumscribed mental exercises, such as playing chess or keeping a car centred in a lane, but they “are completely hopeless outside their area of expertise”. They remain prisoners of their coding. Their precision may be remarkable, but it is inextricably linked to the narrowness of their perception.
        expand
        A robot working on aluminium cars at Jaguar Land Rover in the West Midlands. Photograph: John Robertson
        What makes us smart is not our ability to run lots of data through the circuits of our brains or to tackle welldefined problems through scripted routines. It is our ability to make sense of things – to weave the knowledge we draw from observation and experience into a rich and fluid understanding of the world that we can then apply to any task or challenge. It’s this mental suppleness, born of having an awareness of ourselves and our surroundings, that allows us to think conceptually, critically, metaphorically, imaginatively. The great advantage we have over our computers, in short, is that we are alive and they are not. Sciencefiction fantasies aside, we are not going to lose that advantage anytime soon.
        The real danger we face from computer automation is dependency. Our inclination to assume that computers provide a sufficient substitute for our own intelligence has made us all too eager to hand important work over to software and accept a subservient role for ourselves. In designing automated systems, engineers and programmers also tend to put the interests of technology ahead of the interests of people. They transfer as much work as possible to the software, leaving us humans with passive and routine tasks, such as entering data and monitoring readouts. Recent studies of the effects of automation on work reveal how easily even very skilled people can develop a deadening reliance on computers. Trusting the software to handle any challenges that may arise, the workers fall victim to a phenomenon called “automation complacency”. Their attention drifts, they fail to exercise their skills and their talents begin to wither. In the US, the Federal Aviation Administration has found evidence of a loss of manual flying ability among pilots, which in the worst cases has led to accidents. The agency is now encouraging commercial aviators to turn off the autopilot during flights and do more manual flying. Studies of accountants, radiologists and other professionals have also documented signs of “deskilling” as a result of automation.
        If we design and use our thinking machines wisely, they will open new possibilities for us. They will help us solve hard problems, and they will push us to greater achievements. If we stay on the current path, we will doom ourselves to less interesting work and a steady erosion of skills. The suggestion that algorithms are smarter than we are will become selffulfilling. Certainly, we should respect the capabilities of our computers. But we should respect our own talents even more.

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:06:35 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://jonathandub.in/cognizance/
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:06:35 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 500
      message: Internal Server Error
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:06:55 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '38'
      Connection:
      - keep-alive
      Status:
      - 500 Internal Server Error
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: 'getaddrinfo: Name or service not known'
    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:06:56 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://vimeo.com/116582567
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:06:56 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:06:56 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '830'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        1 week ago
        / via Dropbox All Audiences
        These 3D printed sculptures, called aniforms, are designed to animate when spun under a strobe light. The placement of the appendages is determined by the same method nature uses in pinecones and sunflowers.  The rotation speed is synchronized to the strobe so that one flash occurs every time the sculpture turns 137.5º—the golden angle. If you count the number of spirals on any of these sculptures you will find that they are always Fibonacci numbers.
        For this video, rather than using a strobe, the camera was set to a very short shutter speed (1/4000 sec) in order to freeze the spinning sculpture.
        John Edmark is an inventor/designer/artist. He teaches design at Stanford University.
        Visit John's website here: web.stanford.edu/~edmark/
        and Vimeo site: vimeo.com/johnedmark/videos

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:06:56 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://www.forbes.com/sites/sarahjeong/2015/01/14/the-dhs-agent-who-infiltrated-silk-road-to-take-down-its-kingpin/
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:06:56 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:06:56 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '5859'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        The DHS Agent Who Infiltrated Silk Road to Take Down Its Kingpin
        Illustration by Susie Cagle.
        Illustrations by Susie Cagle
        The first time Jared DerYeghiayan met Ross Ulbricht was at 3:16 pm on October 1, 2013, moments after the latter was arrested for running the notorious online drugs marketplace Silk Road. But according to prosecutors, the two had been in communication for much longer than that.
        The Department of Homeland Security started investigating Silk Road in 2012. By late July 2013, Jared DerYeghiayan, a special agent with Homeland Security Investigations based out of Chicago, had taken over the account of a Silk Road moderator. Today in court, he testified about his role in the sting that led to Ross Ulbricht’s arrest on October 1, 2013.
        Homeland Security Investigations (HSI) had begun investigating Ross Ulbricht as a possible match for the Dread Pirate Roberts (DPR), the chief operator of Silk Road, based on information received from Gary Alford, a Special Agent with the IRS. Alford’s information had also triggered an FBI investigation that involved FBI computer scientist Thomas Kiernan, who is expected to testify next week, and FBI agent Christopher Tarbell, who is known for his role in arresting the hacker Sabu . HSI and FBI merged forces to operate a sting to capture Ross Ulbricht alongside the smoking gun—an open laptop logged into the Silk Road admin page, and in the middle of an encrypted chat with “cirrus.” At this point, DerYeghiayan had been undercover as “cirrus” for about two months, and had access to an encrypted Silk Road staff chatroom that was hosted by a Tor hidden service. By logging into chat, DerYeghiayan was able to see when DPR was available online.
        Illustration by Susie Cagle.
        The FBI procured a warrant to arrest Ross Ulbricht in September 2013. DerYeghiayan arrived in San Francisco on September 30. On October 1, around noon, a team of about half a dozen law enforcement, including Kiernan, Tarbell, and DerYeghiayan, met at Café Bello , a few blocks away from Ulbricht’s house—just far away enough “as not to seem unusual.” DerYeghiayan carried his laptop, powered on, and connected to a mobile hotspot, so he could monitor whether or not the Dread Pirate Roberts was logged into chat.
        DPR was logged in, and Ross Ulbricht was at home. Over the next few hours, the team dispersed, shifting positions across a radius of a few blocks—an area that included Ross Ulbricht’s house, Café Bello, and the Glen Park branch of the San Francisco Public Library. DerYeghiayan moved south to a different café, then moved back up to Café Bello when he realized his laptop battery was low. His computer was open and running this entire time, since his ability to monitor DPR was key to the sting.
        Café Bello was crowded, and it was hard to find a power outlet. At this point in his testimony, the agent’s smooth and professional demeanor showed a crack—perhaps recalling his panic over the low laptop battery that nearly compromised an interagency sting operation.
        Depiction of Government Exhibit in U.S. v. Ulbricht. Illustration by Susie Cagle.
        It was 2:45 pm. Just then, DPR signed off, signaling that he was about to move locations. DerYeghiayan unplugged his computer and crossed the street to join up with Kiernan.
        While standing on the street with Kiernan, and his laptop (now at 22% battery), DerYeghiayan could see Ross Ulbricht just down the block, waiting to cross the street. When the light changed, Ulbricht crossed. He entered Café Bello, which was just as crowded as it had been when DerYeghiayan left it. Ulbricht walked right back out, and headed towards the Glen Park branch of the San Francisco Public Library, which is next door to Bello.
        As Ulbricht entered the library, Kiernan left to go follow him inside. DerYeghiayan remained outside with his laptop. Tarbell rejoined DerYeghiayan, and directed the rest of the arrest team first to wait for the undercover agent to chat with DPR, and then while making the arrest, to make sure to pull the laptop first. Right after Ulbricht entered the library, DPR came online in the Silk Road staff chat. DerYeghiayan, still undercover as “cirrus,” initiated a chat with him, asking him to check out a customer support issue that would require him to log into the Silk Road admin panel.
        The moment DPR asked “ok which post?” the law enforcement team knew that he had logged into the admin panel. Tarbell sent out a signal to arrest Ulbricht, then the two of them entered into the library together. The rest of the team had subdued Ulbricht and seized his laptop, and were in the process of bringing him down the stairs.
        DerYeghiayan sent his last messages to DPR as “cirrus” at 3:14 pm.
        The agent, who had been undercover as a Silk Road moderator since July, met Ross Ulbricht for the first time at 3:16 pm.
        For a period of two months, DerYeghiayan worked undercover as “cirrus,” dealing with customer support tickets on both the Silk Road marketplace and the Silk Road forum. He worked for 10 to 12 hours each day, and was paid about one thousand dollars in bitcoin from DPR’s Silk Road account every week. The undercover agent communicated with the other Silk Road moderators—“samesamebutdifferent,” “inigo,” and “Libertas”—as well as the Dread Pirate Roberts.
        Although the agent had not yet testified as to his involvement in Silk Road 2.0 (nor is it clear whether he will), a moderator named “cirrus” was recruited to help run Silk Road 2.0 (as were the old Silk Road moderators “samesamebutdifferent,” “inigo,” and “Libertas”).  This “cirrus” was the last of the Silk Road 2.0 moderators left standing after a rash of arrests in December 2013 . Vice Motherboard speculated last December that “cirrus” was the mole that brought down Silk Road 2.0.

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:06:57 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://thejumbuckisalmostextinct.com/2009/12/cookies-by-douglas-adams/
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:06:57 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:06:57 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '3260'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Sam Cooney
        ‘Cookies’ by Douglas Adams
        ‘Cookies’ by Douglas Adams
        This actually did happen to a real person, and the real person was me. I had gone to catch a train. This was April 1976, in Cambridge, U.K. I was a bit early for the train. I’d gotten the time of the train wrong. I went to get myself a newspaper to do the crossword, and a cup of coffee and a packet of cookies. I went and sat at a table.
        I want you to picture the scene. It’s very important that you get this very clear in your mind. Here’s the table, newspaper, cup of coffee, packet of cookies. There’s a guy sitting opposite me, perfectly ordinarylooking guy wearing a business suit, carrying a briefcase. It didn’t look like he was going to do anything weird. What he did was this: he suddenly leaned across, picked up the packet of cookies, tore it open, took one out, and ate it.
        Now this, I have to say, is the sort of thing the British are very bad at dealing with. There’s nothing in our background, upbringing, or education that teaches you how to deal with someone who in broad daylight has just stolen your cookies.
        You know what would happen if this had been South Central Los Angeles. There would have very quickly been gunfire, helicopters coming in, CNN, you know. . . But in the end, I did what any redblooded Englishman would do: I ignored it. And I stared at the newspaper, took a sip of coffee, tried to do a clue in the newspaper, couldn’t do anything, and thought, what am I going to do?
        In the end I thought, Nothing for it, I’ll just have to go for it, and I tried very hard not to notice the fact that the packet was already mysteriously opened. I took out a cookie for myself. I thought, That settled him. But it hadn’t because a moment or two later he did it again. He took another cookie. Having not mentioned it the first time, it was somehow even harder to raise the subject the second time around. “Excuse me, I couldn’t help but notice . . .” I mean, it doesn’t really work.
        We went through the whole packet like this. When I say the whole packet, I mean there were only about eight cookies, but it felt like a lifetime. He took one, I took one, he took one, I took one. Finally, when we got to the end, he stood up and walked away. Well, we exchanged meaningful looks, then he walked away, and I breathed a sigh of relief and sat back.
        A moment or two later the train was coming in, so I tossed back the rest of my coffee, stood up, picked up the newspaper, and underneath the newspaper were my cookies.
        The thing I like particularly about this story is the sensation that somewhere in England there has been wandering around for the last quartercentury a perfectly ordinary guy who’s had the same exact story, only he doesn’t have the punch line.
        (from “The Salmon of Doubt: Hitchhiking the Galaxy One Last Time”)
        .
        .
        I read The Salmon of Doubt recently. It’s a posthumous collection of previously unpublished material by Douglas Adams . It consists largely of essays about technology and life experiences, but its major selling point is the inclusion of the incomplete novel on which Adams was working at the time of his death. Some of it is funny, and other bits are poignant. Some bits are funny and poignant.
        .

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:06:58 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://www.seriouseats.com/2014/10/how-to-make-rich-flavorful-easy-chicken-stock.html
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:06:58 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:06:58 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '13590'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        How to Make The Best Chicken Stock
        Oct  1, 2014  9:00AM
        Get Recipe: Basic Chicken Stock
        Got a question for Serious Eats? Email your questions to AskTheFoodLab@seriouseats.com and please include your Serious Eats user name in your email. All questions will be read, though unfortunately not all can be answered.
        Different cuts of chicken produce broths of different colors, but don't let the appearance fool you! [Photographs: Vicky Wasik]
        What Are They Keys to Making a Rich Chicken Stock?
        I'm not satisfied with the flavor of my stocks—they don't taste anything like the rich broths I eat in restaurants. What can I do to make a really good allpurpose stock?
        Chicken stock is the secret ingredient of restaurant food. A good chicken stock should have decent body, along with a mild savory flavor that enhances—rather than competes with—the sauces, glazes, and soup bases you make with it.
        There are a lot of tricks for beefing up a basic chicken stock, adding beef not being one of them. For example, I'll often throw in some chicken feet for extra gelatin, which makes a huge difference in the viscosity of the stock. Instead of being thin like water, gelatinous stock has more body and a slightly sticky texture when it dries on your lips—some of the qualities necessary for a great sauce.
        I'll also use my pressure cooker to make stock at home, since it speeds the process up quite a bit, and helps seal in flavor that otherwise boils off into the air as the stock simmers and steams.
        Some people use ground chicken meat and heavily hackedapart bones to increase flavor and body: any increase in surface area can help with flavor and gelatin extraction.
        I've even taken a page from the dashi rule book by steeping kombu, a type of seaweed that's rich in glutamic acid, the amino acid that's responsible for the satisfyingly savory flavor of umamirich foods, in it.
        But all of those stock upgrades require special shopping trips, equipment, or extra work. For those of us who already make stock frequently and are willing to take the trouble, that's great. But there are too many people who never make their own stock at home, and complicating it with those kinds of extras does little to encourage them to try.
        So here, instead of coming up with the most trickedout, laborintensive chicken stock, I want to look at some of the factors that can affect the quality of a very basic white chicken stock—arguably the most versatile type of stock, and one that requires no roasting of bones or vegetables. My goal here is to give you a very simple stock recipe that is extremely easy to do at home without any special ingredients.
        What Makes a Good Stock?
        In my eyes, a good white chicken stock should have a the full, clean flavors of chicken and aromatic vegetables, and have more body than water. If it gels at least slightly when chilled, that's a good sign as far as body is concerned.
        At the same time, a good basic stock should not have any particularly strong or unconventional flavors. The goal here is versatility, so we want to make sure it will work with all kinds of recipes. An infusion of ginger or aroma of tarragon may be lovely in certain applications, but they're also very specific flavors that we may not want in a basic stock. We don't necessarily want the flavor of stock to dominate a dish made with it, we just want that dish to be enriched by the stock.
        In fact, a lot of the rich restaurant broths mentioned in the question up top aren't made from stock alone: One of the ways restaurants arrive at such deeply layered broths and sauces is to start with a stock (instead of water), and then enhance it further, cooking even more aromatics and meats into it and reducing it to fully concentrate flavors. They're almost like double stocks, with whatever specific ingredients the chef has built into them.
        So instead of thinking of stock as a finished product that should taste like a broth served at a  restaurant, it's better to think of stock as a building block that's helpful in arriving at that final deep and complex flavor.
        The Building Blocks of Stock
        A very basic white chicken stock is a pretty simple affair: It's made with water, chicken, aromatic vegetables like onion, carrot, and garlic, and then herbs. The exact ingredients are up to the cook. I worked for one chef who hated celery, and there wasn't a stockpot in the restaurant that ever contained a celery rib—his stocks and sauces were exemplary, by the way. Some cooks will add other aromatic vegetables, like fennel or leeks, or a variety of herbs, from parsley to thyme and bay leaves.
        There's no right or wrong here, it's just a matter of preference and the flavor profile you're looking for.
        For this stock, I'm keeping it incredibly simple: chicken, carrot, onion, garlic, celery, and parsley. That's it.
        Let's take a closer look at each of these.
        Consider the Chicken
        Stock can be made with a whole chicken, any of its parts, or a combination. In practice, it's usually made with the scraps and bones of a chicken that's already been butchered for other uses. Still, it helps to know how each part of a chicken can change the flavor of stock.
        To find out, I made several batches of stock, each with the exact same amounts of chicken, aromatic vegetables, and water. The only thing I changed was the cut of chicken: boneless breast meat; boneless leg meat; wings; bones; and then a whole chicken.
        To account for differences in pot size and evaporation rates, I measured the final stocks and added water to bring them all up to the same volume. This diluted them a little, but should have helped correct for differences in flavor intensity due to variations in water volume.
        As you can see in the photo above, the color of the final stock is affected by the cut of chicken used. But this is where it gets interesting: The lightest, most washedoutlooking stock was the one made with boneless chicken breast. I expected that stock, both based on its color and also the lack of flavor in chicken breast relative to the other parts, to be the least flavorful. But here's how each stock actually tasted:
        Instead of tasting flavorless and washed out, the chicken breast produced the cleanest tasting stock with the most intense chicken flavor. But it also produced the thinnest stock, in terms of body.
        The thigh meat also produced a lightcolored stock, but it had a muddier, less clean flavor than the breast stock.
        The wings produced the stock with the most body, which makes sense given the number of cartilagerich joints in each wing. But the flavor was also not as chickeny as the breast stock.
        Bones also made a stock with a less distinct chicken flavor, but they contributed some bass notes that were pleasant.
        The whole chicken produced a middleoftheroad stock, not as tasty as the chicken breast stock, but not as muddy as some of the others.
        I initially didn't believe my results, since I generally think of chicken breast as the least flavorful part of the bird. So I sent a message to Kenji to see what he thought. "Actually that maps exactly with tests I did for my book and tests I did at Cooks Illustrated. Chicken breast has the cleanest flavor, though not as much body," he wrote back.
        Okay then, maybe I'm not crazy after all.
        This is helpful, and certainly challenged some of my own assumptions, but I can't really recommend making stock from expensive cuts like chicken breasts, unless money really is not a concern. If you are gathering scraps of chicken for stock, though, this at least shows that it's better, if at all possible, to try to get some white meat in the mix along with bones for bass notes and wings for gelatin.
        Given the issue of quality vs. cost, I'd lean towards wings as the single best option for providing a good balance between rich texture, decent chickeny flavor, and relatively low cost, though if you're the type who likes to collect chicken scraps and carcasses (or can find them for sale cheaply at the market), then you'll do just fine with whatever combination of inexpensive scraps you choose to use.
        If you do make a thinyetflavorful stock, adding a little unflavored gelatin can help boost the body. I found that one packet of unflavored gelatin softened in 1/4 cup cold water, and then mixed into 1 quart of stock did a good job of enhancing body without pushing the stock into weirdly sticky, jellied territory.
        Arming the Aromatics
        Another big question with stock is how to handle the aromatics. It's common to just throw halved onions and big chunks of carrot and celery into the pot. But is that the best way?
        Large aromatics.
        To find out, I made a new round of stocks. In one, I added the aromatics straight to the water in large pieces—halved onions and big pieces of carrot and celery. In another, I diced the aromatics and added them straight to the pot of water.
        Diced boiled aromatics.
        In the third, I diced the aromatics and sautéed them first in a neutral oil until softened and translucent, then added the water and chicken.
        Sautéed then boiled aromatics.
        From the photo, you can see that the sautéed aromatics produced the darkest stock (though I should point out that I didn't let them visibly brown at all while sautéing), but it also created a stock with a vegetable flavor that tasted less fresh to me, as if they had been overcooked to the point of murkiness.
        The whole aromatics, meanwhile, made a stock with the least flavor, which suggests that surface area really does make a difference in terms of flavor extraction, even with the extended cooking time of a stock.
        The plain boiled diced aromatics tasted the best to me and my fellow tasters, producing a stock that was both clean and flavorful.
        The Skimming Question
        Is it really necessary to skim the scum?
        One of the things that scares home cooks away from making stock is the idea that it needs to be carefully tended to, skimmed frequently of oil and scum that floats to the surface.
        I wanted to see whether skipping the skimming was really such a big deal, so I made two more batches of stock, both exactly the same, except one I skimmed and one I didn't. Because skimming removes liquid, I adjusted volumes after cooking, as I had done with the above stocks, to make sure we were tasting approximately equal concentration ratios.
        I made sure with both stocks to keep them at a very gentle simmer as they cooked, since the turbulence of boiling can work a lot of that surface scum back into the broth, which wasn't my goal. One they were done, I finestrained both.
        The final stocks were remarkably similar. If anything, the notskimmed stock was a tiny but more clear than the skimmed one, which definitely contradicted my expectations.
        I don't have a great explanation for this, but here's one theory I've come up with: A lot of the scum that initially floats to the surface of a stock is protein from some of the meat's fluids. When making consommé, which is concentrated crystalclear broth, one of the classic techniques for clarifying the liquid is with a protein raft on the surface, often made from egg whites. Perhaps, at a gentle enough simmer, the protein blobs that come to the surface of the stock end up working like a consommé's protein raft, trapping particles in the broth and clarifying it in the process. If the stock is simmered and handled gently enough, those impurities won't be distributed back into the broth and can be finestrained out.
        Either way, this test suggests that as long as you keep the heat low and have a finemesh strainer, you're safe letting the stock be without skimming it. As for the fat that accumulates on the surface, I find it easiest to remove once the stock has chilled and the fat has congealed on the surface.*
        * It is worth mentioning, though, that I tested these stocks in smaller batch sizes: It's possible that larger batches could generate a deeper layer of grease on the surface, which, in turn, could affect the stock's flavor and clarity in a different way.
        The Ratio and Cooking Time
        One of the keys to good stock is simply to not dilute it too much. When I started my tests, I was limited by pot size and dimension, and had to use 1 pound of chicken per 2 quarts of water (any more and I'd overflow my smaller pots). But that produced stocks that were a little too weak.
        In subsequent batches, I bumped the chicken up, and found that you want at least 2 pounds of chicken per 2 quarts of water, a 1:1 ratio.* In the same volume of water, I added at least 1 whole large diced onion, 2 large diced carrots, 2 ribs of celery, and at least 4 crushed cloves of garlic. A nice tuft of parsley completes it.
        *Edit: As some commenters have correctly pointed out, by weight this is actually a 1:2 ratio, since 1 quart of water weighs 2 pounds; it's 1:1 if keeping units as pounds and quarts.
        That ratio was sufficient to extract enough gelatin from the wings to give me this loosely gelled stock above. If you can pack in even more chicken and aromatics, your stock will only get richer.
        As for time, if you don't cook a stock long enough, you risk not extracting sufficient flavor or gelatin. Cook it too long, though, and you get into a case of seriously diminishing returns. Throughout my testing, I tasted my stocks as they cooked, and generally found about 1 1/2 hours to be a good end point—plenty of time for a flavorful, rich broth, but not so long that it's a major commitment to make it.
        Once you've got this basic stock down, you can either stick with it, or try some of the more ambitious upgrades that I mentioned above. Just think how badass you'll feel buying chicken feet!

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:06:58 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://plus.google.com/110199856631914548293/about
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:06:58 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:06:59 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '342'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        +49 30 62845471
        Italian Restaurant, Pizza RestaurantToday 5:00 pm – 12:00 am
        Monday 5:00 pm – 12:00 amTuesday 5:00 pm – 12:00 amWednesday 5:00 pm – 12:00 amThursday 5:00 pm – 12:00 amFriday 5:00 pm – 12:00 amSaturday 5:00 pm – 12:00 amSunday 5:00 pm – 12:00 am
        Business listings provided by GelbeSeiten®Verlagen
        Google+ URL

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:06:59 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://www.reviewmylife.co.uk/blog/2014/12/22/high-speed-mandm-sorting-machine/
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:06:59 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:06:59 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '11754'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        High speed M&M sorting machine
        M&M sorting machines are a popular project for people who like combining electronics, programming and machine building. I decided I’d try to make my own version but with a different approach to the majority of existing M&M (or Skittles / Smarties!) sorting machines out there.
        Most of them send a single M&M down a chute to a simple colour sensor where the colour sensor will then take a second or two to figure out the colour. A servo motor will then rotate a chute that will direct the M&M into the correct pot.
        My approach sends M&Ms down a chute to start with. But I don’t stop the M&M for colour recognition. Instead I use an iPhone to capture the colour of the M&M as it is in freefall. As it is still falling the iPhone talks to a Bluetooth module attached to an Arduino and that fires off the correct electro magnet controlled gate. This sends the M&M into the correct pot. Even though this is just a rough prototype it is reasonably fast because the colour recognition and path that the M&M takes down the chute is decided and determined whilst the M&M is moving under gravity. Here’s a video of the prototype:
        Initial M&M sorting ideas
        I’d been thinking about making an M&M sorter for a while as a fun project so I could play around with an Arduino. But I didn’t want to stop the M&M for colour recognition or use a servo motor to direct the M&M as these approaches seemed slow to me.
        It was this video of a high speed coin counting machine that got me thinking about some kind of binary gate that would deflect the M&Ms into the correct place. https://www.youtube.com/watch?v=2GGKYHf8DQo . What they’ve done is really cool and impressive – the coins zoom through a sensor faster than you can see, and are nudged down the correct path by a pop up nodule.
        M&M dispenser
        Starting from the top of the machine I had to figure out how to ‘release’ the M&Ms one by one.
        I did attempt to make some kind of spinning ‘thing’ that would shoot M&Ms down a tube in the style of the coin sorter video I saw. It did kind of shoot them down the tube, but mostly it sent the M&Ms flying all around my living room. I still don’t know if I’ve found them all!
        The problem here was making the M&Ms come out one at a time (they often came out in bunches), and the fact that they flew out at different angles and velocities – this would lead to them bouncing around which would make it hard to predict where they were going to go next.
        I also experimented with a cylinder that the M&Ms would go into first, and then they’d fall though the holes when the holes lined up. I realised here that the amount of torque I’d need to rotate these two tubes would be too much for my motors. Plus there was still the problem of the M&Ms falling out in twos.
        I had more success with trying to replicate this tried and tested design adopted by a number of other successful M&M sorters. The M&Ms are in the container and they drop into the holes as the holes become empty.
        The trick to success is to ensure that the height of the hole that the M&M drops into is about the same height as the M&M. This ensures that only one M&M is in the hole at a time. And then as the M&M rotates and approaches the chute it goes under a covered area (like a bridge which touches the surface of the spinning disk) which ensures that when the M&M and the hole line up only the M&M in the hole can fall down.
        The bridge is barely visible in the photo as it is obscured by the sides – it is right at the front and is secured into place with that screw. The piece of foam board on the left perhaps helps to encourage the M&Ms into the hole but may not be necessary. I have the dispenser angled to the back so that the M&Ms fall to the edges (I want to ensure that they all go through the sorter).
        Spinning the dispensor
        I initially bought a 6V 500RPM motor from Amazon, and a set of motor mounts to attach the motor to the spinning disk.
        I tried to decrease the speed to something sensible using a set of gears that I got from Maplin. However with my crude setup there was so much juddering that it prevented the M&Ms from falling smoothly.
        So I bought a 12V 80RPM high torque motor from eBay along with a motor speed controller which allowed me to direct drive the spinning disk. It was much smoother now, and this shows that simpler is often better.
        Electro magnet gates
        I’d decide to try deflecting the M&Ms down the correct chute by using electro magnets to control quick reacting gates. Electro magnets can react very fast – much faster than the slow turning of a servo.
        I first bough a very small low powered electro magnet – it was useless as it was so tiny it wouldn’t have been able to move anything. So I bought a bigger 12V 2A pull magnet from eBaay. This had pulling power (and goes back to its original position when the power is off because of the spring).
        My first attempt was a simple ‘pull’ gate. Here the pulling of the magnet would close the gate.
        I tried doing this with both the magnet on the same level as the chute (above) and also below the chute (below).
        The problem was that the magnet only pulls 1cm, and taking the diagonal into account that does not fully close the chute. It worked a lot of the time, but sometimes an M&M would slip past the gate. As I couldn’t find electro magnets with a larger pull length (one with 23cm would have made all this much simpler!) I went for a ‘chop’ gate instead.
        As the electro magnet pulls back the gate ‘chops’ downwards by means of 3 pivot points. This design turns the small amount of electro magnet movement into something much larger which can cover the entire width of the chute diagonally.
        The difficulty is figuring out the exact shape and size of the moving parts. I didn’t have any scientific way of doing this – I just experimented. First using thin cereal box cardboard as shown in the image on the right. Then using rigid plastic sheet that I bought from a hobby shop. On the left is the final design I went for. These gates react extremely fast, and make quite a bang as the plastic hits the bottom of the chute.
        I had to make 5 of them and here is what they were looking like when glued (using a glue gun) onto the foam board. I added a bit of black tape (which was loose at the bottom) to slightly muffle the sound.
        Colour sorting of M&Ms
        I knew that I was going to use an Arduino to control the M&M sorter so it seemed natural to buy the Arduino compatible colour sensor that most of the other projects were using. The colour sensor is in the photo on the left and is the thing that the bright white light is coming from. What I discovered though using it was that the sensor is very slow. You have to individually sample the 4 colour sensors (red, green, blue and white) and then figure out the colour. This isn’t as easy as the sensors aren’t calibrated with each other, so you need to figure out the calibration first.
        I abandoned the colour sensor as too slow (I can see why the designs that use this sensor have to stop the M&M to figure out the colour now) and decided to use an iPhone 5S camera instead. The iPhone’s camera and CPU was fast enough to film the M&M in free fall and 1) spot that there was an M&M in the field of view and 2) figure out what colour it was. The traditional cheap colour sensors available for the Arduino wouldn’t have even been able to detect that an M&M was even there as it wizzed past in freefall.
        The camera is placed a bit back from the chute to give it a wider field of view. And for efficiency it is only processing the vertical strip of pixels that make up the chute. No need to process the parts of the image that the M&M will never appear in.
        I bought a Bluetooth LE module for the Arduino (shown in red above) so that the iPhone could talk to the Arduino.
        To make determining the colour more simple I flattened the colour palette of the video images as they came in. I made it so the software only saw the colours of the M&Ms that I was interested in seeing (so no shadows which were a big problem!) and everything else was white. It was then simply a matter of counting the number of coloured pixels, and then if the number was above a threshold sending the Bluetooth command to the Arduino.
        Here you can see the Bluetooth board plugged into the Arduino and wired up to the relay. Wires are then heading out of the relay to the electro magnets.
        Putting the M&M machine together
        Once the three key problems of the 1) M&M dispenser, 2) electro magnet gates and the 3) colour recognition were solved it is just a matter of putting it all together. This involved a lot of foam board and glue from a hot glue gun.
        I used a sharp hobby knife to cut the foam board, and bought a cutting compass so that I could cut neat circles for the dispenser.
        As I started testing various bits together I did find a few problems.
        The M&Ms would ricochet about as they fell down the chute, sometimes ricocheting down the wrong chute before they had reached their gate. I kindof solved this by putting the chute at an angle so the M&Ms would be ‘encouraged’ to stay on the smooth side of the chute.
        The electro magnets could get very hot if left on. So hot in fact they could melt the glue that was holding them in place. I had to modify the software to disengage the magnets after they’d been fired (but after the M&M had hit) rather than leaving them in the engaged position.
        Here’s a side view of the assembled prototype.
        And here is the front view. It differs slightly from the version in the video as I extended the M&M ‘pots’ at the bottom to store more M&Ms and I added a button to turn the motor on/off at the top as well as a speed dial for the motor.
        I have a small compilation of video snippets of earlier M&M sorting experiments on YouTube.
        Future improvement ideas
        I think there is a lot of potential for improving on this design. I think with some improvements the speed and accuracy of the M&M sorting could be better.
        Try to get rid of the whole iPhone / Bluetooth setup. I think to do this you could try using a Raspberry Pi with a high speed (60/120FPS) capable camera directly attached. The Pi probably has the processing power to do the image processing.
        At the moment there are three power supplies – one for the Arduino, one for the electro magnets, and one for the motor. It would be great to get everything running off a single power supply.
        More work on the image processing – you may have noticed I wasn’t sorting brown M&Ms. They are a pain to distinguish from orange and shadow. Obviously it can be done but it would need a bit more software work and perhaps some LED lighting on the chute to reduce the effect of the shadows.
        3D printing of the parts – my prototype is very rough – it would be amazing to see it as a smooth 3D printed consumer unit.
        Currently the gates are in a line – this causes slight timing issues – there is less time between the camera recognising the M&M colour and the first gate needing to fire than the last gate needing to fire. NES4_Life came up with the suggestion of having all the chutes arranged in circle (like a flower) and then have the chutes move into the centre at the correct time. This would mean a fairly constant time between colour recognition and firing the electro magnet which could simplify things, especially if the speeds get higher. I did a quick test of the concept (below) and I think it has potential but I haven’t figured out exactly how to do it.
        Some of the items I bought for the M&M machine
        Here a partial list of what I bought – I’ll try to add more if I remember!
        Bought and used on final prototype
        Arduino Mega kit – comes with lots of extra components to play with.

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:06:59 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://tnw.co/1GHaiHP
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:06:59 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:00 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '1824'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Follow
        When we last caught up with Seedcamp , it had just invested in seven new startups . Now it’s ready to announce its latest batch of investments with five springing from Seedcamp Berlin and two graduates of previous Seedcamp weeks emerging from working in stealth.
        At Seedcamp Berlin, the microseed investment and mentoring program invited 19 companies to attend from hundreds of applicants. Five were chosen to receive investment. They are…
        Branchtrack
        Based in Riga, Latvia, Branchtrack allows users to create ‘Choose Your Own Adventure’style simulations for sales and customer care training online. The company was founded in 2009 when the cofounders’ experience trying to create a branching scenario game for team training led them to realise there was a gap in the market. It offers a limited free plan with paid options starting at $19 per month.
        Lateral
        Developed by a team of five based in Berlin, Lateral uses machine intelligence to create bots that automatically generate feeds of news that’s relevant to you, based on what you’re working on. It bases its recommendations on documents you upload to the cloud or previous articles you’ve read and grabs relevant information from news sources and academic papers.
        Now Native
        Another UK startup based in London and Newcastle, Now Native builds tools to help publishers open up more native advertising units on mobile – hence the name. It works with native ad suppliers to, it says, get more revenue for the publisher and the ad supplier.
        The only San Franciscobased startup in this bunch, Podo Labs is also the only hardware startup. It’s building Podo, an appcontrolled ‘stickandshoot’ camera that sticks to practically any smooth, solid surface to allow for remote, handsfree shooting.
        The other two new Seedcamp investments are:

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:00 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://irsh.us/1whlgRM
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:00 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:01 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '3112'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        The weather bomb  Record breaking winds and severe winds expected to batter Ireland’s coast in first of two storms.
        “Weather bomb” storm havoc raises orange alert in Ireland
        Jane Walsh @irishcentral December 10,2014 01:00 AM
        The weather bomb  Record breaking winds and severe winds expected to batter Ireland’s coast in first of two storms.
        Record breaking waves of up to 70 feet could hit the shores of Ireland’s west coast over the coming days as a historic Atlantic Ocean storm hits land.
        Mayo, Sligo and Donegal will bear the brunt of the storm as a huge front of low pressure is being blown south from Iceland. The Irish meteorological services, Met Eireann, has issued an orange warned with the threat of winds up to 110kmh / 68mph. Donegal, Galway, Leitrim, Mayo and Sligo could see winds of up to 130kmh / 80mph.
        The rapid cyclogenesis,  known as a "weather bomb," is a deep low pressure system moving slowly eastwards between Scotland and Iceland.
        This is going to be one helluva N. Atlantic storm coming up. Significant implications for UK/Ireland too. pic.twitter.com/EumjCI6JFS
        — Andrew Freedman (@afreedma) December 7, 2014
        They also warned that waves, like those seen in Hawaii will crash against Ireland’s west and northwest Atlantic coasts. Sadly, for surfers, the winds will be blowing in the wrong direction so they’ll miss out on the storm.
        The Irish Coast Guard has appealed for people not to venture too close to shorelines or piers during the storm.
        Surfers are greatly disappointed. Neil Britton, whose grandparents pioneered the sport in Donegal said, “It's a real shame. At this stage it is looking like we are going to see the biggest waves ever seen here in Rossnowlagh, something I've never seen before.
        "Unfortunately, we need a southwest wind to make those waves ridable and the winds will be coming from the west.
        "We've taken the week off; we'll keep an eye out and if the wind direction does change then we will certainly go for it, but that is looking unlikely from all the forecasts.
        "One thing is for sure, they (the waves) are going to be spectacular to watch. It looks like the biggest swell we've had with waves up to 70 feet high."
        Temperatures are also set to drop. Dublin which has been enjoying highs of around 12C / 53F will plummet toward 5C / 41F later this week. Strong winds are also expected to affect the east but not as badly as the west of Ireland.
        Deirdre Lowe from Met Eireann told the Irish Independent , “It's certainly going to be cold everywhere. The wind will prevent severe frost but there will be a lot of wind chill. It's going to feel a lot colder than it is.
        "It will be close to zero but it's the wind chill that will really be felt."
        — Paul Dunphy Esquire (@pauldunphy) December 9, 2014
        There will also be heavy rain with Dublin avoiding the worst of it. Showers in Ulster may fall as snow.
        The United Kingdom’s Met Office has also issued a yellow warning as they brace themselves for severe gales, high waves and a risk of flooding in Scotland.
        A second storm is due to roll in from the Atlantic Ocean on Friday.
        Submit

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:01 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://soundcloud.com/mermaidsmha/night-walkin
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:01 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:01 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '114'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Your current browser isn't compatible with SoundCloud.
        Please download one of our supported browsers. Need help?

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:02 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://www.youtube.com/watch?v=EWEl8-PHhMI
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:02 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:02 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '1384'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Submarine Sandwich by PES
        Want to watch this again later?
        Sign in to add this video to a playlist.
        Need to report the video?
        Sign in to report inappropriate content.
        Ratings have been disabled for this video.
        Rating is available when the video has been rented.
        This feature is not available right now. Please try again later.
        Published on Dec 10, 2014
        Get official PES merch here: http://pesfilm.com
        For the first time ever, single edition fine art prints from PES's films are now available:
        Western Spaghetti: http://bit.ly/westernspaghettipesfilm
        "Submarine Sandwich" | Written and Directed by PES | Animated by Dillon Markey and PES | Director of Photography: Eric Adkins | Edited by Sam Welch | Produced by Sarah Phelps | Production Design by Hannah Alpert | Sound Design by Sam Welch and PES | Final Audio Mix by Nathan Ruyle | CoProducer: Gregory Stern | Associate Producers: Michael Z. Gordon | Eric Svenson | Alfredo Tanaka | Corinna Vigier | Fabrication/Prop Alterations by Melissa Bloom | Sub Model Fabrication: Pretty in Plastic | Branding Design: Heidi Berg | Lead Carpenter: Ben Richards | Additional Set Dressing: Nate Lay | VFX Supervisor: Cam Leeburg | DCP: Chainsaw Edit | Special Thanks: Mark Soares, NIKON, and our 1114 Kickstarter backers | Filmed in Inglewood, Los Angeles, CA
        Category
        Play next
        Play now
        Play next
        Play now
        Play next
        Play now
        Play next
        Play now

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:02 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://thenextweb.com/boost/
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:02 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:03 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '353'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        WeTransfer
        Vote to get your favourite startup on stage at #TNWUSA
        As part of our early stage startup program Boost, 50 promising companies have been selected to show the world what they've been working on at TNW Conference USA in New York . Help choose which 15 startups will be allowed to pitch in front of a jury. Who would you like to see on stage?

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:03 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://soundcloud.com/jackmaster/jackmaster-mastermix-2014
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:03 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:03 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '114'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Your current browser isn't compatible with SoundCloud.
        Please download one of our supported browsers. Need help?

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:03 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://muyueh.com/greenhoney/
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:03 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:09 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '1'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |2+

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:09 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://www.theawl.com/2014/11/how-to-draw-people-on-the-subway
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:09 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:09 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '55'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        How to Draw People on the Subway
        Step One: Disappear.

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:09 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://wwwwwwwwwwwwwwwwwwwwww.bitnik.org/r/
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:09 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:09 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '961'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Random Darknet Shopper (2014)
        The Random Darknet Shopper is an automated online shopping bot which we provide with a budget of $100 in Bitcoins per week. Once a week the bot goes on shopping spree in the deep web where it randomly choses and purchases one item and has it mailed to us. The items are shown in the exhibition «The Darknet. From Memes to Onionland» at Kunst Halle St. Gallen. Each new object ads to a landscape of traded goods from the Darknet.
        The Random Darknet Shopper is a live Mail Art piece, an exploration of the deep web via the goods traded there. It directly connects the Darknet with the art space (exhibition space). By randomizing our consumerism, we are guaranteed a wide selection of goods from the over 16'000 listed on Agora market place.
        15.01.2015
        Check @bitnk on Twitter for news & updates.
        08.01.15
        Last purchase in this series successfully delivered to Kunst Halle St. Gallen
        08.01.15
        Shipment took over a month.
        06.01.15

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:09 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://www.youtube.com/watch?v=Hcqs5z0yEl4
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:09 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:09 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '459'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Papa was a Rolling Stone The Temptations (Full Version)
        Want to watch this again later?
        Sign in to add this video to a playlist.
        Need to report the video?
        Sign in to report inappropriate content.
        Ratings have been disabled for this video.
        Rating is available when the video has been rented.
        This feature is not available right now. Please try again later.
        Published on Jul 20, 2012
        The Temptations
        Papa was a Rolling Stone(Full Version)     russell887
        Music

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:10 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://www.youtube.com/watch?v=dpKL1hvTsUM
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:10 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:10 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '531'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        吉村弘 Hiroshi Yoshimura / A・I・R Air In Resort  FOREST SIDE 2
        Want to watch this again later?
        Sign in to add this video to a playlist.
        Need to report the video?
        Sign in to report inappropriate content.
        Ratings have been disabled for this video.
        Rating is available when the video has been rented.
        This feature is not available right now. Please try again later.
        Published on Jul 28, 2012
        吉村弘 Hiroshi Yoshimura / A・I・R Air In Resort  FOREST SIDE 2
        Category
        Play next
        Play now
        Play next
        Play now
        Play next
        Play now

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:10 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:10 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 500
      message: Internal Server Error
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:10 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '38'
      Connection:
      - keep-alive
      Status:
      - 500 Internal Server Error
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: 'bad URI(absolute but no path): http://'
    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:10 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://underscorejs.org/%23groupBy
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:10 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:11 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '49127'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Collection Functions (Arrays or Objects)
        each_.each(list, iteratee, [context]) Alias: forEach
        Iterates over a list of elements, yielding each in turn to an iteratee function. The iteratee is bound to the context object, if one is         passed. Each invocation of iteratee is called with three arguments: (element, index, list). If list is a JavaScript object, iteratee's         arguments will be (value, key, list). Returns the list for chaining.
        _.each([1, 2, 3], alert); => alerts each number in turn... _.each({one: 1, two: 2, three: 3}, alert); => alerts each number value in turn...
        Note: Collection functions work on arrays, objects, and           arraylike objects such as arguments, NodeList and similar. But it works by ducktyping, so avoid passing objects with           a numeric length property. It's also good to note that an each loop cannot be broken out of — to break, use _.find instead.
        map_.map(list, iteratee, [context]) Alias: collect
        Produces a new array of values by mapping each value in list through a transformation function (iteratee). If list is a JavaScript object, iteratee's arguments will be (value, key, list).
        _.map([1, 2, 3], function(num){ return num * 3; }); => [3, 6, 9] _.map({one: 1, two: 2, three: 3}, function(num, key){ return num * 3; }); => [3, 6, 9]
        reduce_.reduce(list, iteratee, [memo], [context]) Aliases: inject, foldl
        Also known as inject and foldl, reduce boils down a list of values into a single value. Memo is the initial state of the reduction, and each successive step of it should be returned by iteratee. The iteratee is passed four arguments: the memo, then the value and index (or key) of the iteration, and finally a reference to the entire list.
        If no memo is passed to the initial invocation of reduce, the iteratee is not invoked on the first element         of the list. The first element is instead passed as the memo in the invocation of the iteratee on the next         element in the list.
        var sum = _.reduce([1, 2, 3], function(memo, num){ return memo + num; }, 0); => 6
        reduceRight_.reduceRight(list, iteratee, memo, [context]) Alias: foldr
        The rightassociative version of reduce. Delegates to the         JavaScript 1.8 version of reduceRight, if it exists. Foldr is not as useful in JavaScript as it would be in a language with lazy         evaluation.
        var list = [[0, 1], [2, 3], [4, 5]]; var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []); => [4, 5, 2, 3, 0, 1]
        find_.find(list, predicate, [context]) Alias: detect
        Looks through each value in the list, returning the first one that         passes a truth test (predicate), or undefined if no value         passes the test. The function returns as         soon as it finds an acceptable element, and doesn't traverse the         entire list.
        var even = _.find([1, 2, 3, 4, 5, 6], function(num){ return num % 2 == 0; }); => 2
        filter_.filter(list, predicate, [context]) Alias: select
        Looks through each value in the list, returning an array of all         the values that pass a truth test (predicate).
        var evens = _.filter([1, 2, 3, 4, 5, 6], function(num){ return num % 2 == 0; }); => [2, 4, 6]
        where_.where(list, properties)
        Looks through each value in the list, returning an array of all         the values that contain all of the keyvalue pairs listed in properties.
        _.where(listOfPlays, {author: "Shakespeare", year: 1611}); => [{title: "Cymbeline", author: "Shakespeare", year: 1611},     {title: "The Tempest", author: "Shakespeare", year: 1611}]
        findWhere_.findWhere(list, properties)
        Looks through the list and returns the first value that matches         all of the keyvalue pairs listed in properties.
        If no match is found, or if list is empty, undefined will be         returned.
        _.findWhere(publicServicePulitzers, {newsroom: "The New York Times"}); => {year: 1918, newsroom: "The New York Times",   reason: "For its public service in publishing in full so many official reports,   documents and speeches by European statesmen relating to the progress and   conduct of the war."}
        reject_.reject(list, predicate, [context])
        Returns the values in list without the elements that the truth         test (predicate) passes. The opposite of filter.
        var odds = _.reject([1, 2, 3, 4, 5, 6], function(num){ return num % 2 == 0; }); => [1, 3, 5]
        every_.every(list, [predicate], [context]) Alias: all
        Returns true if all of the values in the list pass the predicate truth test.
        _.every([true, 1, null, 'yes'], _.identity); => false
        some_.some(list, [predicate], [context]) Alias: any
        Returns true if any of the values in the list pass the predicate truth test. Shortcircuits and stops traversing the list         if a true element is found.
        _.some([null, 0, 'yes', false]); => true
        contains_.contains(list, value) Alias: include
        Returns true if the value is present in the list.         Uses indexOf internally, if list is an Array.
        _.contains([1, 2, 3], 3); => true
        invoke_.invoke(list, methodName, *arguments)
        Calls the method named by methodName on each value in the list.         Any extra arguments passed to invoke will be forwarded on to the         method invocation.
        _.invoke([[5, 1, 7], [3, 2, 1]], 'sort'); => [[1, 5, 7], [1, 2, 3]]
        pluck_.pluck(list, propertyName)
        A convenient version of what is perhaps the most common usecase for map: extracting a list of property values.
        var stooges = [{name: 'moe', age: 40}, {name: 'larry', age: 50}, {name: 'curly', age: 60}]; _.pluck(stooges, 'name'); => ["moe", "larry", "curly"]
        max_.max(list, [iteratee], [context])
        Returns the maximum value in list. If an iteratee function is provided, it will be used on each value to generate the         criterion by which the value is ranked. Infinity is returned         if list is empty, so an isEmpty guard         may be required.
        var stooges = [{name: 'moe', age: 40}, {name: 'larry', age: 50}, {name: 'curly', age: 60}]; _.max(stooges, function(stooge){ return stooge.age; }); => {name: 'curly', age: 60};
        min_.min(list, [iteratee], [context])
        Returns the minimum value in list. If an iteratee function is provided, it will be used on each value to generate the         criterion by which the value is ranked. Infinity is returned         if list is empty, so an isEmpty guard         may be required.
        var numbers = [10, 5, 100, 2, 1000]; _.min(numbers); => 2
        sortBy_.sortBy(list, iteratee, [context])
        Returns a (stably) sorted copy of list, ranked in ascending         order by the results of running each value through iteratee.         iteratee may also be the string name of the property to sort by (eg. length).
        _.sortBy([1, 2, 3, 4, 5, 6], function(num){ return Math.sin(num); }); => [5, 4, 6, 3, 1, 2]
        groupBy_.groupBy(list, iteratee, [context])
        Splits a collection into sets, grouped by the result of running each         value through iteratee. If iteratee is a string instead of         a function, groups by the property named by iteratee on each of         the values.
        _.groupBy([1.3, 2.1, 2.4], function(num){ return Math.floor(num); }); => {1: [1.3], 2: [2.1, 2.4]}  _.groupBy(['one', 'two', 'three'], 'length'); => {3: ["one", "two"], 5: ["three"]}
        indexBy_.indexBy(list, iteratee, [context])
        Given a list, and an iteratee function that returns a         key for each element in the list (or a property name),         returns an object with an index of each item.         Just like groupBy , but for when you know your         keys are unique.
        var stooges = [{name: 'moe', age: 40}, {name: 'larry', age: 50}, {name: 'curly', age: 60}]; _.indexBy(stooges, 'age'); => {   "40": {name: 'moe', age: 40},   "50": {name: 'larry', age: 50},   "60": {name: 'curly', age: 60} }
        countBy_.countBy(list, iteratee, [context])
        Sorts a list into groups and returns a count for the number of objects         in each group.         Similar to groupBy, but instead of returning a list of values,         returns a count for the number of values in that group.
        _.countBy([1, 2, 3, 4, 5], function(num) {   return num % 2 == 0 ? 'even': 'odd'; }); => {odd: 3, even: 2}
        shuffle_.shuffle(list)
        Returns a shuffled copy of the list, using a version of the FisherYates shuffle .
        _.shuffle([1, 2, 3, 4, 5, 6]); => [4, 1, 6, 3, 5, 2]
        sample_.sample(list, [n])
        Produce a random sample from the list. Pass a number to         return n random elements from the list. Otherwise a single random         item will be returned.
        _.sample([1, 2, 3, 4, 5, 6]); => 4  _.sample([1, 2, 3, 4, 5, 6], 3); => [1, 6, 2]
        toArray_.toArray(list)
        Creates a real Array from the list (anything that can be         iterated over).  Useful for transmuting the arguments object.
        (function(){ return _.toArray(arguments).slice(1); })(1, 2, 3, 4); => [2, 3, 4]
        size_.size(list)
        Return the number of values in the list.
        _.size({one: 1, two: 2, three: 3}); => 3
        partition_.partition(array, predicate)
        Split array into two arrays: one whose elements all satisfy predicate and one whose elements all do not satisfy predicate.
        _.partition([0, 1, 2, 3, 4, 5], isOdd); => [[1, 3, 5], [0, 2, 4]]
        Array Functions
        Note: All array functions will also work on the arguments object.           However, Underscore functions are not designed to work on "sparse" arrays.
        first_.first(array, [n]) Alias: head, take
        Returns the first element of an array. Passing n will         return the first n elements of the array.
        _.first([5, 4, 3, 2, 1]); => 5
        initial_.initial(array, [n])
        Returns everything but the last entry of the array. Especially useful on         the arguments object. Pass n to exclude the last n elements         from the result.
        _.initial([5, 4, 3, 2, 1]); => [5, 4, 3, 2]
        last_.last(array, [n])
        Returns the last element of an array. Passing n will return         the last n elements of the array.
        _.last([5, 4, 3, 2, 1]); => 1
        rest_.rest(array, [index]) Alias: tail, drop
        Returns the rest of the elements in an array. Pass an index to return the values of the array from that index onward.
        _.rest([5, 4, 3, 2, 1]); => [4, 3, 2, 1]
        compact_.compact(array)
        Returns a copy of the array with all falsy values removed.         In JavaScript, false, null, 0, "", undefined and NaN are all falsy.
        _.compact([0, 1, false, 2, '', 3]); => [1, 2, 3]
        flatten_.flatten(array, [shallow])
        Flattens a nested array (the nesting can be to any depth). If you         pass shallow, the array will only be flattened a single level.
        _.flatten([1, [2], [3, [[4]]]]); => [1, 2, 3, 4];  _.flatten([1, [2], [3, [[4]]]], true); => [1, 2, 3, [[4]]];
        without_.without(array, *values)
        Returns a copy of the array with all instances of the values removed.
        _.without([1, 2, 1, 0, 3, 1, 4], 0, 1); => [2, 3, 4]
        union_.union(*arrays)
        Computes the union of the passedin arrays: the list of unique items,         in order, that are present in one or more of the arrays.
        _.union([1, 2, 3], [101, 2, 1, 10], [2, 1]); => [1, 2, 3, 101, 10]
        intersection_.intersection(*arrays)
        Computes the list of values that are the intersection of all the arrays.         Each value in the result is present in each of the arrays.
        _.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]); => [1, 2]
        difference_.difference(array, *others)
        Similar to without, but returns the values from array that         are not present in the other arrays.
        _.difference([1, 2, 3, 4, 5], [5, 2, 10]); => [1, 3, 4]
        uniq_.uniq(array, [isSorted], [iteratee]) Alias: unique
        Produces a duplicatefree version of the array, using === to test         object equality. If you know in advance that the array is sorted,         passing true for isSorted will run a much faster algorithm.         If you want to compute unique items based on a transformation, pass an iteratee function.
        _.uniq([1, 2, 1, 3, 1, 4]); => [1, 2, 3, 4]
        zip_.zip(*arrays)
        Merges together the values of each of the arrays with the         values at the corresponding position. Useful when you have separate         data sources that are coordinated through matching array indexes.         If you're working with a matrix of nested arrays, _.zip.apply can transpose the matrix in a similar fashion.
        _.zip(['moe', 'larry', 'curly'], [30, 40, 50], [true, false, false]); => [["moe", 30, true], ["larry", 40, false], ["curly", 50, false]]  _.zip.apply(_, arrayOfRowsOfData); => arrayOfColumnsOfData
        object_.object(list, [values])
        Converts arrays into objects. Pass either a single list of [key, value] pairs, or a list of keys, and a list of values.         If duplicate keys exist, the last value wins.
        _.object(['moe', 'larry', 'curly'], [30, 40, 50]); => {moe: 30, larry: 40, curly: 50}  _.object([['moe', 30], ['larry', 40], ['curly', 50]]); => {moe: 30, larry: 40, curly: 50}
        indexOf_.indexOf(array, value, [isSorted])
        Returns the index at which value can be found in the array,         or 1 if value is not present in the array. If you're working with a         large array, and you know that the array is already sorted, pass true for isSorted to use a faster binary search ... or, pass a number as         the third argument in order to look for the first matching value in the         array after the given index.
        _.indexOf([1, 2, 3], 2); => 1
        lastIndexOf_.lastIndexOf(array, value, [fromIndex])
        Returns the index of the last occurrence of value in the array,         or 1 if value is not present. Pass fromIndex to start your search at a         given index.
        _.lastIndexOf([1, 2, 3, 1, 2, 3], 2); => 4
        sortedIndex_.sortedIndex(list, value, [iteratee], [context])
        Uses a binary search to determine the index at which the value should be inserted into the list in order to maintain the list's         sorted order. If an iteratee function is provided, it will be used to compute         the sort ranking of each value, including the value you pass.         The iteratee may also be the string name of the property to sort by (eg. length).
        _.sortedIndex([10, 20, 30, 40, 50], 35); => 3  var stooges = [{name: 'moe', age: 40}, {name: 'curly', age: 60}]; _.sortedIndex(stooges, {name: 'larry', age: 50}, 'age'); => 1
        range_.range([start], stop, [step])
        A function to create flexiblynumbered lists of integers, handy for each and map loops. start, if omitted, defaults         to 0; step defaults to 1. Returns a list of integers         from start to stop, incremented (or decremented) by step,         exclusive. Note that ranges that stop before they start are considered to be zerolength instead of negative — if you'd like a         negative range, use a negative step.
        _.range(10); => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] _.range(1, 11); => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] _.range(0, 30, 5); => [0, 5, 10, 15, 20, 25] _.range(0, 10, 1); => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] _.range(0); => []
        Function (uh, ahem) Functions
        bind_.bind(function, object, *arguments)
        Bind a function to an object, meaning that whenever         the function is called, the value of this will be the object.         Optionally, pass arguments to the function to prefill them,         also known as partial application. For partial application without         context binding, use partial .
        var func = function(greeting){ return greeting + ': ' + this.name }; func = _.bind(func, {name: 'moe'}, 'hi'); func(); => 'hi: moe'
        bindAll_.bindAll(object, *methodNames)
        Binds a number of methods on the object, specified by methodNames, to be run in the context of that object whenever they         are invoked. Very handy for binding functions that are going to be used         as event handlers, which would otherwise be invoked with a fairly useless this. methodNames are required.
        var buttonView = {   label  : 'underscore',   onClick: function(){ alert('clicked: ' + this.label); },   onHover: function(){ console.log('hovering: ' + this.label); } }; _.bindAll(buttonView, 'onClick', 'onHover'); // When the button is clicked, this.label will have the correct value. jQuery('#underscore_button').bind('click', buttonView.onClick);
        partial_.partial(function, *arguments)
        Partially apply a function by filling in any number of its arguments, without changing its dynamic this value. A close cousin         of bind . You may pass _ in your list of arguments to specify an argument that should not be prefilled, but         left open to supply at calltime.
        var add = function(a, b) { return a + b; }; add5 = _.partial(add, 5); add5(10); => 15
        memoize_.memoize(function, [hashFunction])
        Memoizes a given function by caching the computed result. Useful         for speeding up slowrunning computations. If passed an optional hashFunction, it will be used to compute the hash key for storing         the result, based on the arguments to the original function. The default hashFunction just uses the first argument to the memoized function         as the key. The cache of memoized values is available as the cache property on the returned function.
        var fibonacci = _.memoize(function(n) {   return n < 2 ? n: fibonacci(n  1) + fibonacci(n  2); });
        delay_.delay(function, wait, *arguments)
        Much like setTimeout, invokes function after wait milliseconds. If you pass the optional arguments, they will be         forwarded on to the function when it is invoked.
        var log = _.bind(console.log, console); _.delay(log, 1000, 'logged later'); => 'logged later' // Appears after one second.
        defer_.defer(function, *arguments)
        Defers invoking the function until the current call stack has cleared,         similar to using setTimeout with a delay of 0. Useful for performing         expensive computations or HTML rendering in chunks without blocking the UI thread         from updating. If you pass the optional arguments, they will be         forwarded on to the function when it is invoked.
        _.defer(function(){ alert('deferred'); }); // Returns from the function before the alert runs.
        throttle_.throttle(function, wait, [options])
        Creates and returns a new, throttled version of the passed function,         that, when invoked repeatedly, will only actually call the original function         at most once per every wait milliseconds. Useful for ratelimiting events that occur faster than you         can keep up with.
        By default, throttle will execute the function as soon as you call it         for the first time, and, if you call it again any number of times         during the wait period, as soon as that period is over.         If you'd like to disable the leadingedge         call, pass {leading: false}, and if you'd like to disable the         execution on the trailingedge, pass
        {trailing: false}.
        var throttled = _.throttle(updatePosition, 100); $(window).scroll(throttled);
        debounce_.debounce(function, wait, [immediate])
        Creates and returns a new debounced version of the passed function which         will postpone its execution until after wait milliseconds have elapsed since the last time it         was invoked. Useful for implementing behavior that should only happen after the input has stopped arriving. For example: rendering a         preview of a Markdown comment, recalculating a layout after the window         has stopped being resized, and so on.
        Pass true for the immediate parameter to cause debounce to trigger the function on the leading instead of the         trailing edge of the wait interval. Useful in circumstances like         preventing accidental doubleclicks on a "submit" button from firing a         second time.
        var lazyLayout = _.debounce(calculateLayout, 300); $(window).resize(lazyLayout);
        once_.once(function)
        Creates a version of the function that can only be called one time.         Repeated calls to the modified function will have no effect, returning         the value from the original call. Useful for initialization functions,         instead of having to set a boolean flag and then check it later.
        var initialize = _.once(createApplication); initialize(); initialize(); // Application is only created once.
        after_.after(count, function)
        Creates a version of the function that will only be run after first         being called count times. Useful for grouping asynchronous responses,         where you want to be sure that all the async calls have finished, before         proceeding.
        var renderNotes = _.after(notes.length, render); _.each(notes, function(note) {   note.asyncSave({success: renderNotes}); }); // renderNotes is run once, after all notes have saved.
        before_.before(count, function)
        Creates a version of the function that can be called no more than count times. The result of the last function call is memoized and         returned when count has been reached.
        var monthlyMeeting = _.before(3, askForRaise); monthlyMeeting(); monthlyMeeting(); monthlyMeeting(); // the result of any subsequent calls is the same as the second call
        wrap_.wrap(function, wrapper)
        Wraps the first function inside of the wrapper function,         passing it as the first argument. This allows the wrapper to         execute code before and after the function runs, adjust the arguments,         and execute it conditionally.
        var hello = function(name) { return "hello: " + name; }; hello = _.wrap(hello, function(func) {   return "before, " + func("moe") + ", after"; }); hello(); => 'before, hello: moe, after'
        negate_.negate(predicate)
        Returns a new negated version of the predicate function.
        var isFalsy = _.negate(Boolean); _.find([2, 1, 0, 1, 2], isFalsy); => 0
        compose_.compose(*functions)
        Returns the composition of a list of functions, where each function         consumes the return value of the function that follows. In math terms,         composing the functions f(), g(), and h() produces f(g(h())).
        var greet    = function(name){ return "hi: " + name; }; var exclaim  = function(statement){ return statement.toUpperCase() + "!"; }; var welcome = _.compose(greet, exclaim); welcome('moe'); => 'hi: MOE!'
        Object Functions
        Retrieve all the names of the object's properties.
        _.keys({one: 1, two: 2, three: 3}); => ["one", "two", "three"]
        values_.values(object)
        Return all of the values of the object's properties.
        _.values({one: 1, two: 2, three: 3}); => [1, 2, 3]
        pairs_.pairs(object)
        Convert an object into a list of [key, value] pairs.
        _.pairs({one: 1, two: 2, three: 3}); => [["one", 1], ["two", 2], ["three", 3]]
        invert_.invert(object)
        Returns a copy of the object where the keys have become the values         and the values the keys. For this to work, all of your object's values         should be unique and string serializable.
        _.invert({Moe: "Moses", Larry: "Louis", Curly: "Jerome"}); => {Moses: "Moe", Louis: "Larry", Jerome: "Curly"};
        functions_.functions(object) Alias: methods
        Returns a sorted list of the names of every method in an object — that is to say, the name of every function property of the object.
        _.functions(_); => ["all", "any", "bind", "bindAll", "clone", "compact", "compose" ...
        extend_.extend(destination, *sources)
        Copy all of the properties in the source objects over to the destination object, and return the destination object.         It's inorder, so the last source will override properties of the same         name in previous arguments.
        _.extend({name: 'moe'}, {age: 50}); => {name: 'moe', age: 50}
        pick_.pick(object, *keys)
        Return a copy of the object, filtered to only have values for         the whitelisted keys (or array of valid keys).  Alternatively         accepts a predicate indicating which keys to pick.
        _.pick({name: 'moe', age: 50, userid: 'moe1'}, 'name', 'age'); => {name: 'moe', age: 50} _.pick({name: 'moe', age: 50, userid: 'moe1'}, function(value, key, object) {   return _.isNumber(value); }); => {age: 50}
        omit_.omit(object, *keys)
        Return a copy of the object, filtered to omit the blacklisted keys (or array of keys).  Alternatively accepts a predicate         indicating which keys to omit.
        _.omit({name: 'moe', age: 50, userid: 'moe1'}, 'userid'); => {name: 'moe', age: 50} _.omit({name: 'moe', age: 50, userid: 'moe1'}, function(value, key, object) {   return _.isNumber(value); }); => {name: 'moe', userid: 'moe1'}
        defaults_.defaults(object, *defaults)
        Fill in undefined properties in object with the first         value present in the following list of defaults objects.
        var iceCream = {flavor: "chocolate"}; _.defaults(iceCream, {flavor: "vanilla", sprinkles: "lots"}); => {flavor: "chocolate", sprinkles: "lots"}
        clone_.clone(object)
        Create a shallowcopied clone of the object. Any nested objects         or arrays will be copied by reference, not duplicated.
        _.clone({name: 'moe'}); => {name: 'moe'};
        tap_.tap(object, interceptor)
        Invokes interceptor with the object, and then returns object.         The primary purpose of this method is to "tap into" a method chain, in order to perform operations on intermediate results within the chain.
        _.chain([1,2,3,200])   .filter(function(num) { return num % 2 == 0; })   .tap(alert)   .map(function(num) { return num * num })   .value(); => // [2, 200] (alerted) => [4, 40000]
        has_.has(object, key)
        Does the object contain the given key? Identical to object.hasOwnProperty(key), but uses a safe reference to the hasOwnProperty function, in case it's been overridden accidentally .
        _.has({a: 1, b: 2, c: 3}, "b"); => true
        property_.property(key)
        Returns a function that will itself return the key property of any passedin object.
        var moe = {name: 'moe'}; 'moe' === _.property('name')(moe); => true
        matches_.matches(attrs)
        Returns a predicate function that will tell you if a passed in object         contains all of the key/value properties present in attrs.
        var ready = _.matches({selected: true, visible: true}); var readyToGoList = _.filter(list, ready);
        isEqual_.isEqual(object, other)
        Performs an optimized deep comparison between the two objects, to determine         if they should be considered equal.
        var moe   = {name: 'moe', luckyNumbers: [13, 27, 34]}; var clone = {name: 'moe', luckyNumbers: [13, 27, 34]}; moe == clone; => false _.isEqual(moe, clone); => true
        isEmpty_.isEmpty(object)
        Returns true if an enumerable object contains no         values (no enumerable ownproperties). For strings and arraylike         objects _.isEmpty checks if the length property is 0.
        _.isEmpty([1, 2, 3]); => false _.isEmpty({}); => true
        isElement_.isElement(object)
        Returns true if object is a DOM element.
        _.isElement(jQuery('body')[0]); => true
        Returns true if object is an Array.
        (function(){ return _.isArray(arguments); })(); => false _.isArray([1,2,3]); => true
        isObject_.isObject(value)
        Returns true if value is an Object. Note that JavaScript         arrays and functions are objects, while (normal) strings and numbers are not.
        _.isObject({}); => true _.isObject(1); => false
        Returns true if object is an Arguments object.
        (function(){ return _.isArguments(arguments); })(1, 2, 3); => true _.isArguments([1,2,3]); => false
        isFunction_.isFunction(object)
        Returns true if object is a Function.
        _.isFunction(alert); => true
        Returns true if object is a String.
        _.isString("moe"); => true
        Returns true if object is a Number (including NaN).
        _.isNumber(8.4 * 5); => true
        Returns true if object is a finite Number.
        _.isFinite(101); => true  _.isFinite(Infinity); => false
        Returns true if object is either true or false.
        _.isBoolean(null); => false
        Returns true if object is a Date.
        _.isDate(new Date()); => true
        Returns true if object is a RegExp.
        _.isRegExp(/moe/); => true
        isNaN_.isNaN(object)
        Returns true if object is NaN.
        Note: this is not         the same as the native isNaN function, which will also return         true for many other notnumber values, such as undefined.
        _.isNaN(NaN); => true isNaN(undefined); => true _.isNaN(undefined); => false
        isNull_.isNull(object)
        Returns true if the value of object is null.
        _.isNull(null); => true _.isNull(undefined); => false
        Returns true if value is undefined.
        _.isUndefined(window.missingVariable); => true
        Utility Functions
        noConflict_.noConflict()
        Give control of the "_" variable back to its previous owner. Returns         a reference to the Underscore object.
        var underscore = _.noConflict();
        Returns the same value that is used as the argument. In math: f(x) = x
        This function looks useless, but is used throughout Underscore as         a default iteratee.
        var moe = {name: 'moe'}; moe === _.identity(moe); => true
        constant_.constant(value)
        Creates a function that returns the same value that is used as the         argument of _.constant.
        var moe = {name: 'moe'}; moe === _.constant(moe)(); => true
        noop_.noop()
        Returns undefined irrespective of the arguments passed to it.         Useful as the default for optional callback arguments.
        obj.initialize = _.noop;
        times_.times(n, iteratee, [context])
        Invokes the given iteratee function n times. Each invocation of iteratee is called with an index argument. Produces an         array of the returned values.
        Note: this example uses the chaining syntax .
        _(3).times(function(n){ genie.grantWishNumber(n); });
        random_.random(min, max)
        Returns a random integer between min and max, inclusive.         If you only pass one argument, it will return a number between 0 and that number.
        _.random(0, 100); => 42
        mixin_.mixin(object)
        Allows you to extend Underscore with your own utility functions. Pass         a hash of {name: function} definitions to have your functions         added to the Underscore object, as well as the OOP wrapper.
        _.mixin({   capitalize: function(string) {     return string.charAt(0).toUpperCase() + string.substring(1).toLowerCase();   } }); _("fabio").capitalize(); => "Fabio"
        iteratee_.iteratee(value, [context], [argCount])
        A mostlyinternal function to generate callbacks that can be applied         to each element in a collection, returning the desired result — either         identity, an arbitrary callback, a property matcher, or a property accessor.
        The full list of Underscore methods that transform predicates         through _.iteratee is map, find, filter, reject, every, some, max, min, sortBy, groupBy, indexBy, countBy, sortedIndex, partition, and unique.
        var stooges = [{name: 'curly', age: 25}, {name: 'moe', age: 21}, {name: 'larry', age: 23}]; _.map(stooges, _.iteratee('age')); => [25, 21, 23];
        uniqueId_.uniqueId([prefix])
        Generate a globallyunique id for clientside models or DOM elements         that need one. If prefix is passed, the id will be appended to it.
        _.uniqueId('contact_'); => 'contact_104'
        Escapes a string for insertion into HTML, replacing &, <, >, ", `, and ' characters.
        _.escape('Curly, Larry & Moe'); => "Curly, Larry &amp; Moe"
        unescape_.unescape(string)
        The opposite of escape , replaces &amp;, &lt;, &gt;, &quot;, &#96; and &#x27; with their unescaped counterparts.
        _.unescape('Curly, Larry &amp; Moe'); => "Curly, Larry & Moe"
        result_.result(object, property)
        If the value of the named property is a function then invoke it         with the object as context; otherwise, return it.
        var object = {cheese: 'crumpets', stuff: function(){ return 'nonsense'; }}; _.result(object, 'cheese'); => "crumpets" _.result(object, 'stuff'); => "nonsense"
        now_.now()
        Returns an integer timestamp for the current time, using the fastest         method available in the runtime. Useful for implementing timing/animation         functions.
        _.now(); => 1392066795351
        template_.template(templateString, [settings])
        Compiles JavaScript templates into functions that can be evaluated         for rendering. Useful for rendering complicated bits of HTML from JSON         data sources. Template functions can both interpolate variables, using <%= … %>, as well as execute arbitrary JavaScript code, with <% … %>. If you wish to interpolate a value, and have         it be HTMLescaped, use <% … %> When you evaluate a         template function, pass in a data object that has properties         corresponding to the template's free variables. The settings argument         should be a hash containing any _.templateSettings that should be overridden.
        var compiled = _.template("hello: <%= name %>"); compiled({name: 'moe'}); => "hello: moe"  var template = _.template("<b><% value %></b>"); template({value: '<script>'}); => "<b>&lt;script&gt;</b>"
        You can also use print from within JavaScript code.  This is         sometimes more convenient than using <%= ... %>.
        var compiled = _.template("<% print('Hello ' + epithet); %>"); compiled({epithet: "stooge"}); => "Hello stooge"
        If ERBstyle delimiters aren't your cup of tea, you can change Underscore's         template settings to use different symbols to set off interpolated code.         Define an interpolate regex to match expressions that should be         interpolated verbatim, an escape regex to match expressions that should         be inserted after being HTML escaped, and an evaluate regex to match         expressions that should be evaluated without insertion into the resulting         string. You may define or omit any combination of the three.         For example, to perform Mustache.js style templating:
        _.templateSettings = {   interpolate: /\{\{(.+?)\}\}/g };  var template = _.template("Hello {{ name }}!"); template({name: "Mustache"}); => "Hello Mustache!"
        By default, template places the values from your data in the local scope         via the with statement.  However, you can specify a single variable name         with the variable setting. This can significantly improve the speed         at which a template is able to render.
        _.template("Using 'with': <%= data.answer %>", {variable: 'data'})({answer: 'no'}); => "Using 'with': no"
        Precompiling your templates can be a big help when debugging errors you can't         reproduce.  This is because precompiled templates can provide line numbers and         a stack trace, something that is not possible when compiling templates on the client.         The source property is available on the compiled template         function for easy precompilation.
        <script> JST.project = <%= _.template(jstText).source %>; </script>
        Chaining
        You can use Underscore in either an objectoriented or a functional style,         depending on your preference. The following two lines of code are         identical ways to double a list of numbers.
        _.map([1, 2, 3], function(n){ return n * 2; }); _([1, 2, 3]).map(function(n){ return n * 2; });
        Calling chain will cause all future method calls to return         wrapped objects. When you've finished the computation, call value to retrieve the final value. Here's an example of chaining         together a map/flatten/reduce, in order to get the word count of         every word in a song.
        var lyrics = [   {line: 1, words: "I'm a lumberjack and I'm okay"},   {line: 2, words: "I sleep all night and I work all day"},   {line: 3, words: "He's a lumberjack and he's okay"},   {line: 4, words: "He sleeps all night and he works all day"} ];  _.chain(lyrics)   .map(function(line) { return line.words.split(' '); })   .flatten()   .reduce(function(counts, word) {     counts[word] = (counts[word] || 0) + 1;     return counts;   }, {})   .value();  => {lumberjack: 2, all: 4, night: 2 ... }
        In addition, the Array prototype's methods are proxied through the chained Underscore object, so you can slip a reverse or a push into your chain, and continue to         modify the array.
        chain_.chain(obj)
        Returns a wrapped object. Calling methods on this object will continue         to return wrapped objects until value is called.
        var stooges = [{name: 'curly', age: 25}, {name: 'moe', age: 21}, {name: 'larry', age: 23}]; var youngest = _.chain(stooges)   .sortBy(function(stooge){ return stooge.age; })   .map(function(stooge){ return stooge.name + ' is ' + stooge.age; })   .first()   .value(); => "moe is 21"
        value_(obj).value()
        Extracts the value of a wrapped object.
        _([1, 2, 3]).value(); => [1, 2, 3]
        Links & Suggested Reading
        The Underscore documentation is also available in Simplified Chinese .
        Underscore.lua ,         a Lua port of the functions that are applicable in both languages.         Includes OOPwrapping and chaining.         ( source )
        Underscore.m , an ObjectiveC port         of many of the Underscore.js functions, using a syntax that encourages         chaining.         ( source )
        _.m , an alternative         ObjectiveC port that tries to stick a little closer to the original         Underscore.js API.         ( source )
        Underscore.php ,         a PHP port of the functions that are applicable in both languages.         Includes OOPwrapping and chaining.         ( source )
        Underscoreperl ,         a Perl port of many of the Underscore.js functions,         aimed at on Perl hashes and arrays.         ( source )
        Underscore.cfc ,         a Coldfusion port of many of the Underscore.js functions.         ( source )
        Underscore.string ,         an Underscore extension that adds functions for stringmanipulation: trim, startsWith, contains, capitalize, reverse, sprintf, and more.
        Prototype.js , which provides         JavaScript with collection functions in the manner closest to Ruby's Enumerable.
        Oliver Steele's Functional JavaScript ,         which includes comprehensive higherorder function support as well as string lambdas.
        Michael Aufreiter's Data.js ,         a data manipulation + persistence library for JavaScript.
        PyToolz , a Python port         that extends itertools and functools to include much of the         Underscore API.
        Funcy , a practical         collection of functional helpers for Python, partially inspired by Underscore.
        Change Log
        — Diff — Docs
        For consistency and speed across browsers, Underscore now ignores             native array methods for forEach, map, reduce, reduceRight, filter, every, some, indexOf, and lastIndexOf. "Sparse" arrays are             officially dead in Underscore.
        Added _.iteratee to customize the iterators used by collection             functions. Many Underscore methods will take a string argument for easier _.propertystyle lookups, an object for _.wherestyle             filtering, or a function as a custom callback.
        Added _.before as a counterpart to _.after.
        Added _.negate to invert the truth value of a passedin             predicate.
        Added _.noop as a handy empty placeholder function.
        _.isEmpty now works with arguments objects.
        _.has now guards against nullish objects.
        _.omit can now take an iteratee function.
        _.partition is now called with index and object.
        _.matches creates a shallow clone of your object and only iterates             over own properties.
        Aligning better with the forthcoming ECMA6 Object.assign, _.extend only iterates over the object's own properties.
        Falsey guards are no longer needed in _.extend and _.defaults—if the passed in argument isn't a JavaScript             object it's just returned.
        Fixed a few edge cases in _.max and _.min to             handle arrays containing NaN (like strings or other objects)             and Infinity and Infinity.
        Override base methods like each and some and they'll be used internally by other Underscore functions too.
        The escape functions handle backticks (`), to deal with an             IE ≤ 8 bug.
        For consistency, _.union and _.difference now             only work with arrays and not variadic args.
        _.memoize exposes the cache of memoized values as a property             on the returned function.
        _.pick accepts iteratee and context arguments for a more advanced callback.
        Underscore templates no longer accept an initial data object. _.template always returns a function now.
        Optimizations and code cleanup aplenty.
        1.6.0 —
        — Diff — Docs
        Underscore now registers itself for AMD (Require.js), Bower and Component,             as well as being a CommonJS module and a regular (Java)Script.             An ugliness, but perhaps a necessary one.
        Added _.partition, a way to split a collection into two lists             of results — those that pass and those that fail a particular predicate.
        Added _.property, for easy creation of iterators that pull             specific properties from objects. Useful in conjunction with other             Underscore collection functions.
        Added _.matches, a function that will give you a predicate             that can be used to tell if a given object matches a list of specified             key/value properties.
        Added _.constant, as a higherorder _.identity.
        Added _.now, an optimized way to get a timestamp — used             internally to speed up debounce and throttle.
        The _.partial function may now be used to partially apply             any of its arguments, by passing _ wherever you'd like a             placeholder variable, to be filledin later.
        The _.each function now returns a reference to the list for chaining.
        The _.keys function now returns an empty array for             nonobjects instead of throwing.
        … and more miscellaneous refactoring.
        Removed unzip, as it's simply the application of zip to an array of arguments. Use _.zip.apply(_, list) to             transpose instead.
        1.5.0 —
        — Diff — Docs
        Added a new unzip function, as the inverse of _.zip.
        The throttle function now takes an options argument,             allowing you to disable execution of the throttled function on either             the leading or trailing edge.
        A source map is now supplied for easier debugging of the minified             production build of Underscore.
        The defaults function now only overrides undefined values, not null ones.
        Removed the ability to call _.bindAll with no method name             arguments. It's pretty much always wiser to whitelist the names of             the methods you'd like to bind.
        Removed the ability to call _.after with an invocation count             of zero. The minimum number of calls is (naturally) now 1.
        1.4.4 —
        Fixed a 1.4.0 regression in the lastIndexOf function.
        1.4.0 —
        — Diff — Docs
        Added a pairs function, for turning a JavaScript object             into [key, value] pairs ... as well as an object function, for converting an array of [key, value] pairs             into an object.
        Added a countBy function, for counting the number of objects             in a list that match a certain criteria.
        Added an invert function, for performing a simple inversion             of the keys and values in an object.
        Added a where function, for easy cases of filtering a list             for objects with specific values.
        Added an omit function, for filtering an object to remove             certain keys.
        Added a random function, to return a random number in a             given range.
        _.debounce'd functions now return their last updated value,             just like _.throttle'd functions do.
        The sortBy function now runs a stable sort algorithm.
        Added the optional fromIndex option to indexOf and lastIndexOf.
        "Sparse" arrays are no longer supported in Underscore iteration             functions. Use a for loop instead (or better yet, an object).
        The min and max functions may now be called on very large arrays.
        Interpolation in templates now represents null and undefined as the empty string.
        Underscore iteration functions no longer accept null values             as a noop argument. You'll get an early error instead.
        A number of edgecases fixes and tweaks, which you can spot in the diff .             Depending on how you're using Underscore, 1.4.0 may be more             backwardsincompatible than usual — please test when you upgrade.
        1.3.3 —
        — Diff — Docs
        Many improvements to _.template, which now provides the source of the template function as a property, for potentially             even more efficient precompilation on the serverside. You may now             also set the variable option when creating a template,             which will cause your passedin data to be made available under the             variable you named, instead of using a with statement — significantly improving the speed of rendering the template.
        Added the pick function, which allows you to filter an             object literal with a whitelist of allowed property names.
        Added the result function, for convenience when working             with APIs that allow either functions or raw properties.
        Added the isFinite function, because sometimes knowing that             a value is a number just ain't quite enough.
        The sortBy function may now also be passed the string name             of a property to use as the sort order on each object.
        Fixed uniq to work with sparse arrays.
        The difference function now performs a shallow flatten             instead of a deep one when computing array differences.
        The debounce function now takes an immediate parameter, which will cause the callback to fire on the leading             instead of the trailing edge.
        1.3.1 —
        The _.isEqual function now             supports true deep equality comparisons, with checks for cyclic structures,             thanks to Kit Cambridge.
        Underscore templates now support HTML escaping interpolations, using <% ... %> syntax.
        Ryan Tenney contributed _.shuffle, which uses a modified FisherYates to give you a shuffled copy of an array.
        _.uniq can now be passed an optional iterator, to determine by             what criteria an object should be considered unique.
        _.last now takes an optional argument which will return the last             N elements of the list.
        A new _.initial function was added, as a mirror of _.rest,             which returns all the initial values of a list (except the last N).
        1.1.7 —
        — Diff — Docs
        Added _.groupBy, which aggregates a collection into groups of like items.         Added _.union and _.difference, to complement the         (renamed) _.intersection.         Various improvements for support of sparse arrays. _.toArray now returns a clone, if directly passed an array. _.functions now also returns the names of functions that are present         in the prototype chain.
        1.1.6 —
        — Diff — Docs
        Added _.after, which will return a function that only runs after         first being called a specified number of times. _.invoke can now take a direct function reference. _.every now requires an iterator function to be passed, which         mirrors the ECMA5 API. _.extend no longer copies keys when the value is undefined. _.bind now errors when trying to bind an undefined value.
        1.1.5 —
        — Diff — Docs
        Added an _.defaults function, for use merging together JS objects         representing default options.         Added an _.once function, for manufacturing functions that should         only ever execute a single time. _.bind now delegates to the native ECMAScript 5 version,         where available. _.keys now throws an error when used on nonObject values, as in         ECMAScript 5.         Fixed a bug with _.keys when used over sparse arrays.
        1.1.4 —
        — Diff — Docs
        Improved compliance with ES5's Array methods when passing null as a value. _.wrap now correctly sets this for the         wrapped function. _.indexOf now takes an optional flag for         finding the insertion index in an array that is guaranteed to already         be sorted. Avoiding the use of .callee, to allow _.isArray to work properly in ES5's strict mode.
        1.1.3 —
        — Diff — Docs
        In CommonJS, Underscore may now be required with just:
        var _ = require("underscore").         Added _.throttle and _.debounce functions.         Removed _.breakLoop, in favor of an ECMA5style unbreakable         each implementation — this removes the try/catch, and you'll now have         better stack traces for exceptions that are thrown within an Underscore iterator.         Improved the isType family of functions for better interoperability         with Internet Explorer host objects. _.template now correctly escapes backslashes in templates.         Improved _.reduce compatibility with the ECMA5 version:         if you don't pass an initial value, the first item in the collection is used. _.each no longer returns the iterated collection, for improved         consistency with ES5's forEach.
        1.1.2 —
        Added an _.isArguments function. Lots of little safety checks         and optimizations contributed by Noah Sloan and Andri Möll .
        0.5.0 —
        — Diff — Docs
        [API Changes] _.bindAll now takes the context object as         its first parameter. If no method names are passed, all of the context         object's methods are bound to it, enabling chaining and easier binding. _.functions now takes a single argument and returns the names         of its Function properties. Calling _.functions(_) will get you         the previous behavior.         Added _.isRegExp so that isEqual can now test for RegExp equality.         All of the "is" functions have been shrunk down into a single definition. Karl Guertin contributed patches.
        0.4.7 —
        Renamed the unwrapping function to value, for clarity.
        0.4.1 —
        — Diff — Docs
        Chained Underscore objects now support the Array prototype methods, so         that you can perform the full range of operations on a wrapped array         without having to break your chain. Added a breakLoop method         to break in the middle of any Underscore iteration. Added an isEmpty function that works on arrays and objects.
        0.4.0 —
        — Diff — Docs
        All Underscore functions can now be called in an objectoriented style,         like so: _([1, 2, 3]).map(...);. Original patch provided by MarcAndré Cournoyer .         Wrapped objects can be chained through multiple         method invocations. A functions method         was added, providing a sorted list of all the functions in Underscore.
        0.3.3 —

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:11 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://www.youtube.com/watch?v=X_DVS_303kQ
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:11 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:11 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '3940'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Goodbye Horses  Q Lazzarus
        Want to watch this again later?
        Sign in to add this video to a playlist.
        Need to report the video?
        Sign in to report inappropriate content.
        Ratings have been disabled for this video.
        Rating is available when the video has been rented.
        This feature is not available right now. Please try again later.
        Uploaded on Jan 1, 2009
        This is the original cover sleeve of the 'Goodbye Horses' single, so people can see that it is a woman singing. The picture is of Q Lazzarus. I too, initially thought it was a man singing, but knowing that it is not, does not detract from the fact that the song is amazing and powerful. The song lyrics and composition by William Garvey (who died in 2009) and sung by Q Lazzarus.
        Actual lyrics are :
        He told me, "I've seen it rise,
        But, it always falls.
        I've seen 'em come, I've seen 'em go."
        He said, "All things pass into the night."
        And I said, "Oh no sir, I must say you're wrong,
        I must disagree, Oh no sir, I must say you're wrong,
        Won't you listen to me?"
        He told me, "I've seen it all before,
        I've been there, I've seen my hopes and dreams
        lying on the ground.
        I've seen the sky, just begin to fall."
        He said, "All things pass into the night"
        And I said, "Oh no sir, I must say you're wrong,
        I must disagree, Oh no sir, I must say you're wrong,
        Won't you listen to me."
        Goodbye horses, I'm flying over you.
        Goodbye horses, I'm flying over you.
        You can check this, by going to William Garvey's website. http://www.garveymusic.com/ It's a woman singing about a man (sung in past tense), and what he's telling her is all very negative, to which she disagrees. It's pretty simplistic in it's verses. The 'Goodbye Horses' lyric is clearly a metaphor. There are no horses in the song.     Basically, it's the mind we're talking about here. 'Goodbye Horses' is saying goodbye to the mind. So it could just be Death on the whole. I believe Garvey intended the song to be quite uplifting, however, he didn't have control over Q Lazzarus' voice. But as with any song, it's all down to interpretation (well, unless the singer says otherwise and screws that up)     A lot of people say 'Goodbye Horses' is about drugs, namely, cocaine. But there isn't really any indication to that. On the flipside to the 'Goodbye Horses' vinyl, is a song called 'White Lines', which could easily be misconstrued as being about cocaine, but the lyric within the song goes 'White lines over the ocean'. But even if the song is a reference to cocaine, it does not mean that 'Goodbye Horses' is. 'Goodbye Horses' was not written for the movie 'The Silence Of The Lambs (1991 Jonathan Demme)'. The song was written and released in 1988, a month after the book (by Thomas Harris) was released. The song appeared in 'Married To The Mob' (another Demme movie) which was released in theatres across America a month after the books release, thus making it impossible.
        Unfortunately Q Lazzarus only made a few songs and they are very hard to come by: 'The Candle Goes Away', which featured in the 1986 movie 'Something Wild' staring Melanie Griffith, i believe (another Demme movie) . 'White Lines' which appeared on the flipside to the 'Goodbye Horses' vinyl. 'Heaven' (a cover of 'The Talking Heads') which appeared in the film 'Philadelphia' (yet another Demme movie), which you can see a clip of (on YouTube) under the title.. 'Soul Song In The End Of The Party', you even see Q herself, seemingly wearing the same jacket as on the Goodbye Horses cover sleeve, and wearing a hat. Unfortunately the song seems to be an inmovie song, and thus not a proper recording.     Also, Q Lazzarus wrote and composed music, alongside Danny Z, for a movie named 'Twisted' by director  Seth Michael Donsky released in 1996. I read a review of the film by someone, who said 'that the movie should of just been a 2 hour MTV music video, which could mean (not certain) that Q lazzarus sings some other songs...here's hoping.
        Music

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:12 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://www.youtube.com/watch?v=6dYQNlWQ4UY
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:12 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:12 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '352'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        BICEP | LYK LYK
        Want to watch this again later?
        Sign in to add this video to a playlist.
        Need to report the video?
        Sign in to report inappropriate content.
        Ratings have been disabled for this video.
        Rating is available when the video has been rented.
        This feature is not available right now. Please try again later.
        Published on Sep 9, 2014
        PREORDER:

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:12 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://www.youtube.com/watch?v=4DgbUBoxa48
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:12 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:12 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '454'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Kevin!
        Want to watch this again later?
        Sign in to add this video to a playlist.
        Need to report the video?
        Sign in to report inappropriate content.
        Ratings have been disabled for this video.
        Rating is available when the video has been rented.
        This feature is not available right now. Please try again later.
        Uploaded on Apr 29, 2009
        Home Alone. Kevin Scream.
        Play next
        Play now
        Play next
        Play now
        Play next
        Play now
        Play next
        Play now
        Play next
        Play now

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:13 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://www.youtube.com/watch?v=v4sDiCKdZ4M
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:13 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:12 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '1017'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Clap! Clap!  "Kuj Yato" (Official Video)
        Want to watch this again later?
        Sign in to add this video to a playlist.
        Need to report the video?
        Sign in to report inappropriate content.
        Ratings have been disabled for this video.
        Rating is available when the video has been rented.
        This feature is not available right now. Please try again later.
        Published on Sep 11, 2014
        Click here now to subscribe to THUMP: http://bit.ly/Subscribe_to_THUMP
        Clap! Clap! first popped up on our radar when we premiered, "Vu," a track he collaborated on with Populous on the latter's stellar new album Night Safari. Now we're getting a glimpse into Clap! Clap!'s solo world with the premiere of his video for "Kuj Yato," and we really can't get enough. Yeah, there are world sounds all over this track, but this ain't your kindacool uncle's World Music. The video features some MadMaxian fire dancing, while the music is all crisscrossing chimes and 808s. Very, very cool stuff.
        Read more on THUMP: http://bit.ly/1rYpsXp
        Follow Clap Clap:

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:13 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://medium.com/re-form/what-the-flag-says-6b48ef093e6f
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:13 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:14 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        The author chose to make this story unlisted, which means only people with a link can see it. Are you sure you want to share it?
        Yes, show me sharing options
        What the Flag Says

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:15 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://github.com/programa-stic/snapchat-decrypt
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:15 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:15 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '3042'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Support for Snapchat last version 5.0.38.1. Now checks wich version it's installed to obtain the images.
        How Snapchat decrypted images in previous versions
        The new version of Snapchat (v5.0.34.nn), released on September 23rd, 2014) saves the received images differently than previous versions.  Snapchat version 5.0.32.3 saved all encrypted images using the AES cipher in ECB mode with a hardcoded password ('M02cnQ51Ji97vwT4') under /data/data/com.snapchat.android/cache/received_image_snaps folder. Scripts such as [1] could decrypt successfully images pulled from the device. Other ways to obtain the images include the use of the Xposed Framework and KeepChat [2].
        How Snapchat decrypts images now (as of October 10th, 2014)
        The new Snapchat version encrypts images using the AES algorithm in CBC mode. For each received image a new random key and initialization vector (IV) is generated to encrypt it.  This results from the use by the ReceivedSnaps class  of the default algorithm constructor in com.snapchat.android.util.crypto.CBCEncryption as it does not pass it a specific key and IV to use. When the app is stopped, the keys are saved in an encrypted file named /data/data/com.snapchat.android/cache/bananas in order to be able to perform the decryption next time the app runs. Therefore it is necessary to stop the application before trying to decrypt the 'bananas' file  to obtain all the keys to decrypt the images (snaps) . This file is encrypted using the AES algorithm in ECB mode but the key is predictable since the method that generates it can be found in the class com.snapchat.android.util.crypto.SlightySecurePreferences. The key is generated from a MD5 hash using the Android ID concatenated with the string 'seems legit...'. The content of the decrypted file is a JSON structure. Under the snapKeysAndIvs field one can find all the keys (the corresponding IVs are also unnecessarily stored) to decrypt the images. Each image key and IV has a snapID. This ID is associated to the corresponding image file in the tcspahn.db database file under the table snapimagesfiles.
        Proof of concept code to decrypt Snapchat v 5.0.34.nn images
        The python script first  stops the Snapchat application to force the storage of decryption keys in the bananas file, it then pulls the images from Snapchat internal storage along with the bananas cache file.  Next  it decrypts the last file with the predictable key to obtain the keys and IVs to decrypt the images. After that, it tries to decrypt each image with all possible pairs of key and IVs to find a successful decryption (this could be also done by pulling the database file and reading the snapID associations table mentioned earlier).
        If the script fails, try opening Snapchat again to make sure the snaps where downloaded and run the script again.
        Snapchat 5.0.38 update:
        Snapchat updated the application after the script was released. No much has changed. The file 'bananas' was renamed to 'bananas1' and the way the index are saved inside changed since version 5.0.34.nn.

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:16 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://iquantny.tumblr.com/post/99544282749/found-the-manhattan-apartment-thats-the-farthest-from
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:16 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:16 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '2218'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        I Quant NY
        Found: The Manhattan Apartment that’s the Farthest from any Subway
        If there is one thing I learned while living on the Upper East Side many years ago, it’s that York Avenue is quite a hike from the subway (at least as far as hikes from subways in Manhattan go). That fact can sometimes help keep housing prices down, at least until the 2nd Avenue Line comes in.
        All that hiking got me wondering: What residential building in Manhattan is farthest from a subway station entrance?  Is it in the Upper East Side? The Lower East Side?  The West Side?
        Well, in the spirit of my earlier StarbucksDistance analysis, I turned to Open Data to answer that question once and for all. To do so, I merged two data sets, the MTA Subway Station Entrance data set and PLUTO , which gives information on all lots in NYC. I then calculated the distance from the center of each lot to the nearest station.The map of lots colored by distance from subway entrances looks like this (with green being close and red being far): 
         
        And there on the map lies the farthest residential building from a subway entrance in Manhattan according to my analysis: 10 Gracie Square, located at the end of 84th street at the FDR Drive.  It is 0.7 miles from the subway station as the crow flies, or 0.8 miles using the grid.  My favorite part about the finding is that the Penthouse, which I guess is literally the farthest place you can live from the subway due to the longer ride down in the elevator, is currently on the market for $18.9 million, down from $23 million last year .   That’s right, you can pay $18.9 million dollars to have literally the longest walk to the subway in all of Manhattan!  But fear not power walkers, there is also a two bedroom listed with a the same walk but a slightly shorter elevator ride… for $3.75 million.  
        Update:
        I’ve added a Google Doc for you to look up your own residential address and see how you compare to the rest of Manhattan.
        MTA Subway Station Entrance is  here.
        NYC Lot information via PLUTO is here .
        Analysis done in QGIS.
        Longest Distances measured as the crow flies.
        Data is only as complete as PLUTO, and so newer buildings on Roosevelt Island seem to be missing.

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:17 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://huff.to/1slf0bb
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:17 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:17 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '5220'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        At a Glance: What Apple Watch Means for Typography
        Posted:
        By Danielle Reid
        Apple's mobile screens have been steadily increasing in size before our eyes. While plenty of attention has been given to the camera quality, sharp resolution, and bendability of the iPhone 6 and 6 Plus, perhaps it's time we shift our focus on what is to come. In 2015, the world will meet Apple's smallest interface: the yettobenamed, custom typeface for the Apple Watch.
        Our addiction to staying connected is about to spread to our wrists, bringing with it an entirely new set of design challenges that must adapt to the onthego, small screen.
        The unveiling of it's first smartwatch marks Apple's first new product category in over four years. The technology is being billed as an intimate device that will interact with the user beyond the visual. Cue " Taptic Engine ", which slightly vibrates on your wrist so that you don't need to look at the screen when receiving a notification. You can even share your heartbeat with your 'significant AppleWatchother' using Taptic Engine's haptic feedback technology to send a mechanical pulse to their Apple Watch wearing wrist. There are also new sound notifications and a touchsensitive zooming tool called "Digital Crown"
        While some features aren't entirely as innovative as they're cracked up to be, the visual aspect is revolutionary. The Apple Watch marks the company's first return to inhouse typography design since Espy Sans and Espy Serif in 1993. "Apple Sans" (or whatever it shall be named) will be the first ever typeface designed inhouse specifically for a smartwatch.
        What makes it innovative? It's in the details: the precision required for designing each individual letter, as well as the space in between and surrounding them, within a parameter of a 38 to 42mm screen height.
        Let's Rewind the Time
        Apple's Human Interface Group designed their last inhouse typeface, the bitmapped font Espy Sans , back in 1993 for its System 7.5. It was designed specifically to look good on a screen, at the time an innovation in its own right . Later, the company opted for offtheshelf fonts, such as Adobedesigned Myriad , which has slowly been introduced to the web since 2002. The infamous Helvetica Neue and Lucida Grande have been used since the first generation iPhone surfaced in 2007. With iOS7, Helvetica Neue Ultra Light became the default system font.
        Although there was some controversy surrounding Helvetica Neue Ultra Light's legibility , this didn't stop Apple from replacing their OSX system font Lucida Grande with Helvetica Neue Ultra Light in June 2014. However, considering Helvetica Neue is " basically unreadable at small sizes " it is little wonder that Apple has now decided to take typographic control by designing "Apple Sans" for a smaller screen.
        Typography 101
        So how do you design a typeface that's readable at a glance? You start with a clear objective. In the case of the Apple Watch, the goal is to maximize typographic clarity for both legibility and readability.
        Wait, what's the difference? Legibility is an informal measure of how much effort it takes to distinguish one letter from another in a specific typeface. Readability, on the other hand, depends on the context in which the typeface is used. So in other words, in order to maximize typographic clarity, as much importance needs to be placed on the space between the letters as it is the actual design of the letters themselves.
        "Apple Sans" is more spacious than Helvetica Neue and is certainly thicker and rounder than Helvetica Neue Ultra Light. It is designed to aid pattern recognition, important for comprehending information quickly. Pattern recognition starts with identifying individual letters, followed by word patterns and finally groups of words. Allowing the letters to "breathe" lets us distinguish what we're reading as clear symbols rather than text: letters, words and then phrases.
        When rounded letters are used together with highcontrast colors, we're able to skim information that we need as fast as possible. The color palette of positively neon green and pink icons against Apple's black background and stark white typography lets our eyes navigate and recognize information. This is particularly evident in Apple Watch Sport , where user interface design and typography is slightly brighter and bolder to help quantify our fitness at a glance.
        Apple may no longer need to convince us that the PostPC era is imminent, as proclaimed by Steve Jobs in 2010, but the company does still need to get the details right to serve our hunger for receiving notifications, information, viewing photos and even quantifying our every movement . This all needs to be done on a surface about the size of a matchbook.
        So while your wrist becomes more intimate, letting you feel those fluttering heartbeats, think of the new Apple typeface as an embodiment of Apple: your friend who is always improving according to your behavior, with the added bonus of blinging up your wrist as a customizable fashion accessory.
        Follow Fueled on Twitter: www.twitter.com/Fueled
        More:
        Please check the checkbox to indicate your consent
        Options
        Get top stories and blog posts emailed to me each day..
        Facebook

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:18 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=http://www.tfl.gov.uk/campaign/new-tube-for-london
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:18 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 500
      message: Internal Server Error
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:45 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '101'
      Connection:
      - keep-alive
      Status:
      - 500 Internal Server Error
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: 404 => Net::HTTPNotFound for http://www.tfl.gov.uk/campaign/new-tube-for-london
        -- unhandled response
    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:46 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://www.youtube.com/watch?v=PPQrNkOgttQ
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:46 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:46 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '828'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        Making japanese food samples
        Want to watch this again later?
        Sign in to add this video to a playlist.
        Need to report the video?
        Sign in to report inappropriate content.
        The interactive transcript could not be loaded.
        Loading...
        Ratings have been disabled for this video.
        Rating is available when the video has been rented.
        This feature is not available right now. Please try again later.
        Published on Feb 2, 2014
        Gujo town in Gifu prefecture of Japan is the place where technology of making these ultrarealistic food samples used to show menu in Japanese restaurants began. These samples are made out of plastic, wax and other materials, and then painted. It is also possible to try making some simple samples by yourself.
        Category
        Play next
        Play now
        Play next
        Play now
        Play next
        Play now
        Play next
        Play now
        Play next
        Play now

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:46 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://github.com/Swordfish90/cool-retro-term
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:46 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:46 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '3778'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        coolretroterm
        Description
        coolretroterm is a terminal emulator which mimics the look and feel of the old cathode tube screens. It has been designed to be eyecandy, customizable, and reasonably lightweight.
        It uses the QML port of qtermwidget (Konsole) developed by me: https://github.com/Swordfish90/qmltermwidget
        This terminal emulator requires Qt 5.2 or higher to run.
        Screenshots
        Get coolretroterm
        You can either build coolretroterm yourself (see below) or walk the easy way and install one of these packages:
        Users of Fedora and openSUSE can grab a package from Open Build Service .
        Arch users can install this package directly via the AUR :
        yaourt S aur/coolretrotermgit
        Gentoo users can install from a 3rdparty repository preferably via layman:
        # USE="subversion git" emerge appportage/layman # wget nocheckcertificate https://www.gerczei.eu/files/gerczei.xml O /etc/layman/overlays/gerczei.xml # layman f a qt a gerczei # ACCEPT_KEYWORDS="~*" emerge x11terms/coolretroterm::gerczei
        A word of warning: USE flags and keywords are to be added to portage's configuration files and every emerge operation should be executed with 'p' (short option for pretend) appended to the command line first as per best practice!
        Ubuntu users of 14.04 LTS (Trusty) can use this PPA
        Build instructions (Linux)
        Make sure to install these first.
        Ubuntu 14.04
        sudo aptget install buildessential qmlscene qt5qmake qt5default qtdeclarative5dev qtdeclarative5controlsplugin qtdeclarative5qtquick2plugin libqt5qmlgraphicaleffects qtdeclarative5dialogsplugin qtdeclarative5localstorageplugin qtdeclarative5windowplugin
        Debian Jessie
        sudo aptget install buildessential qmlscene qt5qmake qt5default qtdeclarative5dev qmlmoduleqtquickcontrols qmlmoduleqtgraphicaleffects qmlmoduleqtquickdialogs qmlmoduleqtquicklocalstorage qmlmoduleqtquickwindow2
        Fedora This command should install the known fedora dependencies:
        sudo yum y install qt5qtbase qt5qtbasedevel qt5qtdeclarative qt5qtdeclarativedevel qt5qtgraphicaleffects qt5qtquickcontrols
        or:
        sudo dnf y install qt5qtbase qt5qtbasedevel qt5qtdeclarative qt5qtdeclarativedevel qt5qtgraphicaleffects qt5qtquickcontrols
        Arch Linux
        sudo pacman S qt5base qt5declarative qt5quickcontrols qt5graphicaleffects
        openSUSE
        Add repository with latest Qt 5 (this is only needed on openSUSE 13.1, Factory already has it):
        sudo zypper ar http://download.opensuse.org/repositories/KDE:/Qt5/openSUSE_13.1/ KDE:Qt5
        Install dependencies:
        sudo zypper install libqt5qtbasedevel libqt5qtdeclarativedevel libqt5qtquickcontrols libqt5qtgraphicaleffects
        Anyone else
        Install Qt directly from here http://qtproject.org/downloads . Once done export them in you path (replace "/opt/Qt5.3.1/5.3/gcc_64/bin" with your correct folder):
        export PATH=/opt/Qt5.3.1/5.3/gcc_64/bin/:$PATH
        Compile
        Once you installed all dependencies (Qt is installed and in your path) you need to compile and run the application:
        # Get it from GitHub git clone recursive https://github.com/Swordfish90/coolretroterm.git # Build it cd coolretroterm # Compile (Fedora and OpenSUSE user should use qmakeqt5 instead of qmake) qmake && make # Have fun! ./coolretroterm
        Build instructions (OSX)
        Install Xcode and agree to the licence agreement
        Enter the following commands into the terminal:
        brew install qt5 git clone recursive https://github.com/Swordfish90/coolretroterm.git export CPPFLAGS="I/usr/local/opt/qt5/include" export LDFLAGS="L/usr/local/opt/qt5/lib" export PATH=/usr/local/opt/qt5/bin:$PATH cd coolretroterm qmake && make mkdir coolretroterm.app/Contents/PlugIns cp r qmltermwidget/QMLTermWidget coolretroterm.app/Contents/PlugIns open coolretroterm.app
        Donations
        I made this project in my spare time because I love what I'm doing. If you are enjoying it and you want to buy me a beer click here .

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:47 GMT
- request:
    method: get
    uri: https://document-parser.lateral.io/boilerpipe/?url=https://vid.me/VFj
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.6.0.1, ruby 2.0.0 (2014-02-24))
      Accept:
      - '*/*'
      Date:
      - Sat, 24 Jan 2015 17:07:47 GMT
      Authorization:
      - Basic bGF0ZXJhbDpZP3hiajIqNDIjZUAjYTk3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 24 Jan 2015 17:07:47 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '129'
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: UTF-8
      string: |+
        This video has been suspended either due to a copyright claim, or for breaching the terms of use .
        Don Hertzfeldt Couch Opening

    http_version: 
  recorded_at: Sat, 24 Jan 2015 17:07:48 GMT
recorded_with: VCR 2.9.3
